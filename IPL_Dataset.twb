<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Chennai Super Kings&quot;'>
        <calculation class='tableau' formula='&quot;Chennai Super Kings&quot;' />
        <members />
      </column>
      <column caption='Filter based on Team' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Kings XI Punjab&quot;'>
        <calculation class='tableau' formula='&quot;Kings XI Punjab&quot;' />
        <members>
          <member value='&quot;Chennai Super Kings&quot;' />
          <member value='&quot;Deccan Chargers&quot;' />
          <member value='&quot;Delhi Capitals&quot;' />
          <member value='&quot;Gujarat Lions&quot;' />
          <member value='&quot;Kings XI Punjab&quot;' />
          <member value='&quot;Kochi Tuskers Kerala&quot;' />
          <member value='&quot;Kolkata Knight Riders&quot;' />
          <member value='&quot;Mumbai Indians&quot;' />
          <member value='&quot;no result&quot;' />
          <member value='&quot;Pune Warriors India&quot;' />
          <member value='&quot;Rajasthan Royals&quot;' />
          <member value='&quot;Rising Pune Supergiant&quot;' />
          <member value='&quot;Royal Challengers Bangalore&quot;' />
          <member value='&quot;Sunrisers Hyderabad&quot;' />
        </members>
      </column>
      <column caption='Year_total_runs ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Royal Challengers Bangalore&quot;'>
        <calculation class='tableau' formula='&quot;Royal Challengers Bangalore&quot;' />
        <members>
          <member value='&quot;Chennai Super Kings&quot;' />
          <member value='&quot;Deccan Chargers&quot;' />
          <member value='&quot;Delhi Capitals&quot;' />
          <member value='&quot;Gujarat Lions&quot;' />
          <member value='&quot;Kings XI Punjab&quot;' />
          <member value='&quot;Kochi Tuskers Kerala&quot;' />
          <member value='&quot;Kolkata Knight Riders&quot;' />
          <member value='&quot;Mumbai Indians&quot;' />
          <member value='&quot;Pune Warriors India&quot;' />
          <member value='&quot;Rajasthan Royals&quot;' />
          <member value='&quot;Rising Pune Supergiant&quot;' />
          <member value='&quot;Royal Challengers Bangalore&quot;' />
          <member value='&quot;Sunrisers Hyderabad&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='deliveries+' inline='true' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='textscan.06hzp7g1625rug1d415jo0vlzwkp'>
            <connection class='textscan' directory='E:/GIM study material/Visualization/Tableau_Group_Project_-_DVTP/IPL' filename='deliveries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp' name='deliveries.csv' table='[deliveries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='integer' name='over' ordinal='2' />
            <column datatype='integer' name='ball' ordinal='3' />
            <column datatype='string' name='batsman' ordinal='4' />
            <column datatype='string' name='non_striker' ordinal='5' />
            <column datatype='string' name='bowler' ordinal='6' />
            <column datatype='integer' name='batsman_runs' ordinal='7' />
            <column datatype='integer' name='extra_runs' ordinal='8' />
            <column datatype='integer' name='total_runs' ordinal='9' />
            <column datatype='integer' name='non_boundary' ordinal='10' />
            <column datatype='integer' name='is_wicket' ordinal='11' />
            <column datatype='string' name='dismissal_kind' ordinal='12' />
            <column datatype='string' name='player_dismissed' ordinal='13' />
            <column datatype='string' name='fielder' ordinal='14' />
            <column datatype='string' name='extras_type' ordinal='15' />
            <column datatype='string' name='batting_team' ordinal='16' />
            <column datatype='string' name='bowling_team' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='integer' name='over' ordinal='2' />
              <column datatype='integer' name='ball' ordinal='3' />
              <column datatype='string' name='batsman' ordinal='4' />
              <column datatype='string' name='non_striker' ordinal='5' />
              <column datatype='string' name='bowler' ordinal='6' />
              <column datatype='integer' name='batsman_runs' ordinal='7' />
              <column datatype='integer' name='extra_runs' ordinal='8' />
              <column datatype='integer' name='total_runs' ordinal='9' />
              <column datatype='integer' name='non_boundary' ordinal='10' />
              <column datatype='integer' name='is_wicket' ordinal='11' />
              <column datatype='string' name='dismissal_kind' ordinal='12' />
              <column datatype='string' name='player_dismissed' ordinal='13' />
              <column datatype='string' name='fielder' ordinal='14' />
              <column datatype='string' name='extras_type' ordinal='15' />
              <column datatype='string' name='batting_team' ordinal='16' />
              <column datatype='string' name='bowling_team' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='player_of_match' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='integer' name='neutral_venue' ordinal='5' />
              <column datatype='string' name='team1' ordinal='6' />
              <column datatype='string' name='team2' ordinal='7' />
              <column datatype='string' name='toss_winner' ordinal='8' />
              <column datatype='string' name='toss_decision' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='string' name='result' ordinal='11' />
              <column datatype='integer' name='result_margin' ordinal='12' />
              <column datatype='string' name='method' ordinal='13' />
              <column datatype='string' name='umpire1' ordinal='14' />
              <column datatype='string' name='umpire2' ordinal='15' />
              <column datatype='integer' name='is_playoff' ordinal='16' />
              <column datatype='integer' name='is_eliminator' ordinal='17' />
              <column datatype='integer' name='is_qualifier' ordinal='18' />
              <column datatype='integer' name='is_final' ordinal='19' />
              <column datatype='string' name='home_of' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[ball]' value='[deliveries.csv].[ball]' />
          <map key='[batsman]' value='[deliveries.csv].[batsman]' />
          <map key='[batsman_runs]' value='[deliveries.csv].[batsman_runs]' />
          <map key='[batting_team]' value='[deliveries.csv].[batting_team]' />
          <map key='[bowler]' value='[deliveries.csv].[bowler]' />
          <map key='[bowling_team]' value='[deliveries.csv].[bowling_team]' />
          <map key='[city]' value='[matches.csv].[city]' />
          <map key='[date]' value='[matches.csv].[date]' />
          <map key='[dismissal_kind]' value='[deliveries.csv].[dismissal_kind]' />
          <map key='[extra_runs]' value='[deliveries.csv].[extra_runs]' />
          <map key='[extras_type]' value='[deliveries.csv].[extras_type]' />
          <map key='[fielder]' value='[deliveries.csv].[fielder]' />
          <map key='[home_of]' value='[matches.csv].[home_of]' />
          <map key='[id (matches.csv)]' value='[matches.csv].[id]' />
          <map key='[id]' value='[deliveries.csv].[id]' />
          <map key='[inning]' value='[deliveries.csv].[inning]' />
          <map key='[is_eliminator]' value='[matches.csv].[is_eliminator]' />
          <map key='[is_final]' value='[matches.csv].[is_final]' />
          <map key='[is_playoff]' value='[matches.csv].[is_playoff]' />
          <map key='[is_qualifier]' value='[matches.csv].[is_qualifier]' />
          <map key='[is_wicket]' value='[deliveries.csv].[is_wicket]' />
          <map key='[method]' value='[matches.csv].[method]' />
          <map key='[neutral_venue]' value='[matches.csv].[neutral_venue]' />
          <map key='[non_boundary]' value='[deliveries.csv].[non_boundary]' />
          <map key='[non_striker]' value='[deliveries.csv].[non_striker]' />
          <map key='[over]' value='[deliveries.csv].[over]' />
          <map key='[player_dismissed]' value='[deliveries.csv].[player_dismissed]' />
          <map key='[player_of_match]' value='[matches.csv].[player_of_match]' />
          <map key='[result]' value='[matches.csv].[result]' />
          <map key='[result_margin]' value='[matches.csv].[result_margin]' />
          <map key='[team1]' value='[matches.csv].[team1]' />
          <map key='[team2]' value='[matches.csv].[team2]' />
          <map key='[toss_decision]' value='[matches.csv].[toss_decision]' />
          <map key='[toss_winner]' value='[matches.csv].[toss_winner]' />
          <map key='[total_runs]' value='[deliveries.csv].[total_runs]' />
          <map key='[umpire1]' value='[matches.csv].[umpire1]' />
          <map key='[umpire2]' value='[matches.csv].[umpire2]' />
          <map key='[venue]' value='[matches.csv].[venue]' />
          <map key='[winner]' value='[matches.csv].[winner]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_boundary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_boundary]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_boundary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_wicket</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_wicket]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_wicket</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extras_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extras_type]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extras_type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (matches.csv)]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral_venue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[neutral_venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>neutral_venue</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result_margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result_margin]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result_margin</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_playoff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_playoff]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_playoff</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_eliminator</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_eliminator]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_eliminator</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_qualifier</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_qualifier]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_qualifier</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_final</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_final]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_final</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_of</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_of]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>home_of</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Batsman (copy) (copy)' datatype='string' name='[Batsman (copy) (copy)_2326390703825063938]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[batsman]' />
      </column>
      <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[batsman]' />
      </column>
      <column caption='qwerty' datatype='string' name='[Calculation_1503639346724999170]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [winner]== [Parameters].[Parameter 1] THEN &quot;Highlight&quot; else &quot;Don&apos;t&quot; END' />
      </column>
      <column caption='Powerplay' datatype='boolean' name='[Calculation_1503639346730278917]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[over]&lt;=6' />
      </column>
      <column caption='exclude function' datatype='string' name='[Calculation_1503639346739343366]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [winner]== [team1] then [Batsman (copy)_1550645667151286272] END' />
      </column>
      <column caption='Home ground Advantage' datatype='integer' name='[Calculation_1503639346756550664]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [venue]: COUNT([home_of])}' />
      </column>
      <column caption='Date Filter' datatype='date' name='[Calculation_1967791583537520640]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[date]' />
      </column>
      <column caption='Refrence line' datatype='boolean' name='[Calculation_2257710809152286720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[batsman_runs]&gt;400' />
      </column>
      <column caption='Batsman strike_rate' datatype='real' name='[Calculation_2283887982600536064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[batsman_runs]/[ball]*100' />
      </column>
      <column caption='calculated Field based on Team' datatype='boolean' name='[Calculation_2326390703802400768]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Winner (copy)_742249532809498627]=[team1]' />
      </column>
      <column caption='Calculation1' datatype='boolean' name='[Calculation_2326390703831420931]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [winner]= [team1] then [inning]=1 ELSE [inning]=2 END' />
      </column>
      <column caption='Count of Overs' datatype='integer' name='[Calculation_303148571279659008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([over])' />
      </column>
      <column caption='overs per year(Include LOD)' datatype='integer' name='[Calculation_303148571285135361]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [id]:COUNTD([over])}' />
      </column>
      <column caption='Calculation_matches' datatype='real' name='[Calculation_319474119347052544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(COUNT([__tableau_internal_object_id__].[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229])/6)/19' />
      </column>
      <column caption='Home Of (copy 2)' datatype='string' name='[Home Of (copy 2)_1503639346755371015]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[home_of]' />
      </column>
      <column caption='Home Of (copy)' datatype='string' name='[Home Of (copy)_832603001608437760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[home_of]' />
      </column>
      <column caption='Id (copy)' datatype='integer' name='[Id (copy)_1503639346718597120]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[id]' />
      </column>
      <column aggregation='None' caption='Inning (bin)' datatype='integer' name='[Inning (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[inning]' peg='0' size='2' />
      </column>
      <column aggregation='None' caption='Is Eliminator (copy) (bin)' datatype='integer' name='[Is Eliminator (copy) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Is Eliminator (copy)_742249532789882880]' peg='0' size='3' />
      </column>
      <column caption='Is Eliminator (copy)' datatype='integer' name='[Is Eliminator (copy)_742249532789882880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[is_eliminator]' />
      </column>
      <column caption='Team1 (copy 2)' datatype='string' name='[Team1 (copy 2)_832603001662160900]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team1]' />
      </column>
      <column caption='Team1 (copy)' datatype='string' name='[Team1 (copy)_1550645667154862081]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team1]' />
      </column>
      <column caption='Team2 (copy 2)' datatype='string' name='[Team2 (copy 2)_832603001662181381]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team2]' />
      </column>
      <column caption='Team2 (copy)' datatype='string' name='[Team2 (copy)_1550645667154878466]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team2]' />
      </column>
      <column caption='Toss Decision (copy)' datatype='string' name='[Toss Decision (copy)_742249532809285633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[toss_decision]' />
      </column>
      <column caption='Toss Winner (copy)' datatype='string' name='[Toss Winner (copy)_742249532809302018]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[toss_winner]' />
      </column>
      <column caption='Umpire1 (copy)' datatype='string' name='[Umpire1 (copy)_2121758395345711104]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[umpire1]' />
      </column>
      <column caption='Umpire2 (copy)' datatype='string' name='[Umpire2 (copy)_2121758395345723393]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[umpire2]' />
      </column>
      <column caption='Winner (copy 2)' datatype='string' name='[Winner (copy 2)_1503639346718810113]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[winner]' />
      </column>
      <column caption='Winner (copy 3)' datatype='string' name='[Winner (copy 3)_2326390703824953345]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[winner]' />
      </column>
      <column caption='Winner (copy)' datatype='string' name='[Winner (copy)_742249532809498627]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[winner]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Extras Type' datatype='string' name='[extras_type]' role='dimension' type='nominal' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Home Of' datatype='string' name='[home_of]' role='dimension' type='nominal' />
      <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Inning' datatype='integer' name='[inning]' role='dimension' type='ordinal' />
      <column caption='Is Eliminator' datatype='integer' name='[is_eliminator]' role='measure' type='quantitative' />
      <column caption='Is Final' datatype='integer' name='[is_final]' role='measure' type='quantitative' />
      <column caption='Is Playoff' datatype='integer' name='[is_playoff]' role='measure' type='quantitative' />
      <column caption='Is Qualifier' datatype='integer' name='[is_qualifier]' role='measure' type='quantitative' />
      <column caption='Is Wicket' datatype='integer' name='[is_wicket]' role='measure' type='quantitative' />
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal' />
      <column caption='Neutral Venue' datatype='integer' name='[neutral_venue]' role='measure' type='quantitative' />
      <column caption='Non Boundary' datatype='integer' name='[non_boundary]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Result Margin' datatype='integer' name='[result_margin]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2283887982600536064]' derivation='Avg' name='[avg:Calculation_2283887982600536064:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Avg' name='[avg:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_runs]' derivation='Avg' name='[avg:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_wicket]' derivation='Count' name='[cnt:is_wicket:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neutral_venue]' derivation='Count' name='[cnt:neutral_venue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Count' name='[cnt:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[result_margin]' derivation='Count' name='[cnt:result_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[toss_decision]' derivation='Count' name='[cnt:toss_decision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[toss_winner]' derivation='Count' name='[cnt:toss_winner:qk]' pivot='key' type='quantitative' />
      <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='CountD' name='[ctd:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Umpire2 Set]' derivation='InOut' name='[io:Umpire2 Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='Max' name='[max:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1503639346724999170]' derivation='None' name='[none:Calculation_1503639346724999170:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2326390703802400768]' derivation='None' name='[none:Calculation_2326390703802400768:nk]' pivot='key' type='nominal' />
      <column-instance column='[Home Of (copy 2)_1503639346755371015]' derivation='None' name='[none:Home Of (copy 2)_1503639346755371015:nk]' pivot='key' type='nominal' />
      <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
      <column-instance column='[extras_type]' derivation='None' name='[none:extras_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
      <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
      <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
      <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_runs]' derivation='None' name='[none:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_303148571285135361]' derivation='Sum' name='[sum:Calculation_303148571285135361:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Is Eliminator (copy)_742249532789882880]' derivation='Sum' name='[sum:Is Eliminator (copy)_742249532789882880:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ball]' derivation='Sum' name='[sum:ball:qk]' pivot='key' type='quantitative' />
      <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extra_runs]' derivation='Sum' name='[sum:extra_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_eliminator]' derivation='Sum' name='[sum:is_eliminator:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_final]' derivation='Sum' name='[sum:is_final:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_playoff]' derivation='Sum' name='[sum:is_playoff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_qualifier]' derivation='Sum' name='[sum:is_qualifier:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_wicket]' derivation='Sum' name='[sum:is_wicket:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neutral_venue]' derivation='Sum' name='[sum:neutral_venue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[non_boundary]' derivation='Sum' name='[sum:non_boundary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Sum' name='[sum:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[result_margin]' derivation='Sum' name='[sum:result_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_303148571279659008]' derivation='User' name='[usr:Calculation_303148571279659008:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Dismissal Kind)' hidden='true' name='[Action (Dismissal Kind)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dismissal_kind]' />
        </groupfilter>
      </group>
      <group caption='Action (Id (Matches.Csv))' hidden='true' name='[Action (Id (Matches.Csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[id (matches.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Id (copy),Winner (copy 2),Batsman,Winner)' hidden='true' name='[Action (Id (copy),Winner (copy 2),Batsman,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Id (copy)_1503639346718597120]' />
          <groupfilter function='level-members' level='[Winner (copy 2)_1503639346718810113]' />
          <groupfilter function='level-members' level='[batsman]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Id (copy),Winner (copy 2),Winner)' hidden='true' name='[Action (Id (copy),Winner (copy 2),Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Id (copy)_1503639346718597120]' />
          <groupfilter function='level-members' level='[Winner (copy 2)_1503639346718810113]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Id (copy),Winner (copy 2),YEAR(Date),Winner)' hidden='true' name='[Action (Id (copy),Winner (copy 2),YEAR(Date),Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Id (copy)_1503639346718597120]' />
          <groupfilter function='level-members' level='[Winner (copy 2)_1503639346718810113]' />
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Id,Team1,Winner)' hidden='true' name='[Action (YEAR(Date),Id,Team1,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:date:ok]' />
          <groupfilter function='level-members' level='[id]' />
          <groupfilter function='level-members' level='[team1]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Team1,Team2,Winner)' hidden='true' name='[Action (YEAR(Date),Team1,Team2,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[team1]' />
          <groupfilter function='level-members' level='[team2]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Winner)' hidden='true' name='[Action (YEAR(Date),Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:date:ok]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Top matches Umpired' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[Umpire1 (copy)_2121758395345711104]' member='&quot;Kumar Dharmasena&quot;' />
          <groupfilter function='member' level='[Umpire2 (copy)_2121758395345723393]' member='&quot;C. K. Nandan&quot;' />
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Home Of (copy 2)_1503639346755371015]' member='&quot;Delhi Capitals&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[team1]' member='&quot;Delhi Capitals&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[venue]' member='&quot;Arun Jaitley Stadium&quot;' />
                <groupfilter function='member' level='[winner]' member='&quot;Delhi Capitals&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Home Of (copy 2)_1503639346755371015]' member='&quot;Kolkata Knight Riders&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[team1]' member='&quot;Kolkata Knight Riders&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[venue]' member='&quot;Eden Gardens&quot;' />
                <groupfilter function='member' level='[winner]' member='&quot;Kolkata Knight Riders&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Home Of (copy 2)_1503639346755371015]' member='&quot;Royal Challengers Bangalore&quot;' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[team1]' member='&quot;Royal Challengers Bangalore&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[venue]' member='&quot;M.Chinnaswamy Stadium&quot;' />
                <groupfilter function='member' level='[winner]' member='&quot;Royal Challengers Bangalore&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Set 3' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[Home Of (copy 2)_1503639346755371015]' member='&quot;Kolkata Knight Riders&quot;' />
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[team1]' member='&quot;Kolkata Knight Riders&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[venue]' member='&quot;Eden Gardens&quot;' />
                <groupfilter function='member' level='[winner]' member='&quot;Kolkata Knight Riders&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 5 Umpire from Team1' name='[Umpire1 Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[umpire1]' member='&quot;Aleem Dar&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Anil Chaudhary&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Asad Rauf&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Kumar Dharmasena&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Marais Erasmus&quot;' />
        </groupfilter>
      </group>
      <group caption='Set for Umpire2' name='[Umpire2 Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[umpire2]' member='&quot;C. K. Nandan&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Chettithody Shamshuddin&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Rod Tucker&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Simon Taufel&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Sundaram Ravi&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Batsman Hierarchy'>
          <field>[Team1 (copy)_1550645667154862081]</field>
          <field>[Team2 (copy)_1550645667154878466]</field>
          <field>[Home Of (copy)_832603001608437760]</field>
        </drill-path>
        <drill-path name='Batsman Hierarchy according to id'>
          <field>[Id (copy)_1503639346718597120]</field>
          <field>[Winner (copy 2)_1503639346718810113]</field>
          <field>[batsman]</field>
        </drill-path>
        <drill-path name='Team1 Hierarchy'>
          <field>[Team1 (copy 2)_832603001662160900]</field>
          <field>[Team2 (copy 2)_832603001662181381]</field>
          <field>[home_of]</field>
        </drill-path>
        <drill-path name='Toss Winner Hierarchy (copy)'>
          <field>[Toss Winner (copy)_742249532809302018]</field>
          <field>[Toss Decision (copy)_742249532809285633]</field>
          <field>[Winner (copy)_742249532809498627]</field>
        </drill-path>
        <drill-path name='Umpire1 Hierarchy'>
          <field>[Umpire1 (copy)_2121758395345711104]</field>
          <field>[Umpire2 (copy)_2121758395345723393]</field>
        </drill-path>
        <drill-path name='Winner Hierarchy'>
          <field>[Winner (copy 3)_2326390703824953345]</field>
          <field>[Batsman (copy) (copy)_2326390703825063938]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:team1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1503639346724999170:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Don&apos;t&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Highlight&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Home Of (copy 2)_1503639346755371015:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2326390703802400768:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Umpire2 Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:toss_decision:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;field&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:player_of_match:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rohit Sharma&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mahendra Singh Dhoni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Warner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Gayle&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batting_team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pune Warriors India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;no result&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:extra_runs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[max:winner:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_eliminator:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_wicket:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:neutral_venue:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:neutral_venue:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[avg:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:inning:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_decision:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_winner:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:Is Eliminator (copy)_742249532789882880:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:is_wicket:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[usr:Calculation_303148571279659008:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_qualifier:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:ball:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[avg:Calculation_2283887982600536064:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[avg:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:result_margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[ctd:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:Calculation_303148571285135361:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:result_margin:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:non_boundary:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_playoff:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:extras_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;byes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;penalty&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;noballs&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;wides&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;legbyes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:result:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;no result&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;wickets&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;runs&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Filter based on Team' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Kings XI Punjab&quot;'>
          <calculation class='tableau' formula='&quot;Kings XI Punjab&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229'>
            <properties context=''>
              <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp' name='deliveries.csv' table='[deliveries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='integer' name='over' ordinal='2' />
                  <column datatype='integer' name='ball' ordinal='3' />
                  <column datatype='string' name='batsman' ordinal='4' />
                  <column datatype='string' name='non_striker' ordinal='5' />
                  <column datatype='string' name='bowler' ordinal='6' />
                  <column datatype='integer' name='batsman_runs' ordinal='7' />
                  <column datatype='integer' name='extra_runs' ordinal='8' />
                  <column datatype='integer' name='total_runs' ordinal='9' />
                  <column datatype='integer' name='non_boundary' ordinal='10' />
                  <column datatype='integer' name='is_wicket' ordinal='11' />
                  <column datatype='string' name='dismissal_kind' ordinal='12' />
                  <column datatype='string' name='player_dismissed' ordinal='13' />
                  <column datatype='string' name='fielder' ordinal='14' />
                  <column datatype='string' name='extras_type' ordinal='15' />
                  <column datatype='string' name='batting_team' ordinal='16' />
                  <column datatype='string' name='bowling_team' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='matches.csv' id='matches.csv_C4C070A94C08433B8A0423B61F6EF313'>
            <properties context=''>
              <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp' name='matches.csv' table='[matches#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='player_of_match' ordinal='3' />
                  <column datatype='string' name='venue' ordinal='4' />
                  <column datatype='integer' name='neutral_venue' ordinal='5' />
                  <column datatype='string' name='team1' ordinal='6' />
                  <column datatype='string' name='team2' ordinal='7' />
                  <column datatype='string' name='toss_winner' ordinal='8' />
                  <column datatype='string' name='toss_decision' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='string' name='result' ordinal='11' />
                  <column datatype='integer' name='result_margin' ordinal='12' />
                  <column datatype='string' name='method' ordinal='13' />
                  <column datatype='string' name='umpire1' ordinal='14' />
                  <column datatype='string' name='umpire2' ordinal='15' />
                  <column datatype='integer' name='is_playoff' ordinal='16' />
                  <column datatype='integer' name='is_eliminator' ordinal='17' />
                  <column datatype='integer' name='is_qualifier' ordinal='18' />
                  <column datatype='integer' name='is_final' ordinal='19' />
                  <column datatype='string' name='home_of' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (matches.csv)]' />
            </expression>
            <first-end-point object-id='deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229' />
            <second-end-point object-id='matches.csv_C4C070A94C08433B8A0423B61F6EF313' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='deliveries+ (2)' inline='true' name='federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='textscan.06hzp7g1625rug1d415jo0vlzwkp (copy)'>
            <connection class='textscan' directory='E:/GIM study material/Visualization/Tableau_Group_Project_-_DVTP/IPL' filename='deliveries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp (copy)' name='deliveries.csv' table='[deliveries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='integer' name='over' ordinal='2' />
            <column datatype='integer' name='ball' ordinal='3' />
            <column datatype='string' name='batsman' ordinal='4' />
            <column datatype='string' name='non_striker' ordinal='5' />
            <column datatype='string' name='bowler' ordinal='6' />
            <column datatype='integer' name='batsman_runs' ordinal='7' />
            <column datatype='integer' name='extra_runs' ordinal='8' />
            <column datatype='integer' name='total_runs' ordinal='9' />
            <column datatype='integer' name='non_boundary' ordinal='10' />
            <column datatype='integer' name='is_wicket' ordinal='11' />
            <column datatype='string' name='dismissal_kind' ordinal='12' />
            <column datatype='string' name='player_dismissed' ordinal='13' />
            <column datatype='string' name='fielder' ordinal='14' />
            <column datatype='string' name='extras_type' ordinal='15' />
            <column datatype='string' name='batting_team' ordinal='16' />
            <column datatype='string' name='bowling_team' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp (copy)' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='integer' name='over' ordinal='2' />
              <column datatype='integer' name='ball' ordinal='3' />
              <column datatype='string' name='batsman' ordinal='4' />
              <column datatype='string' name='non_striker' ordinal='5' />
              <column datatype='string' name='bowler' ordinal='6' />
              <column datatype='integer' name='batsman_runs' ordinal='7' />
              <column datatype='integer' name='extra_runs' ordinal='8' />
              <column datatype='integer' name='total_runs' ordinal='9' />
              <column datatype='integer' name='non_boundary' ordinal='10' />
              <column datatype='integer' name='is_wicket' ordinal='11' />
              <column datatype='string' name='dismissal_kind' ordinal='12' />
              <column datatype='string' name='player_dismissed' ordinal='13' />
              <column datatype='string' name='fielder' ordinal='14' />
              <column datatype='string' name='extras_type' ordinal='15' />
              <column datatype='string' name='batting_team' ordinal='16' />
              <column datatype='string' name='bowling_team' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp (copy)' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='player_of_match' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='integer' name='neutral_venue' ordinal='5' />
              <column datatype='string' name='team1' ordinal='6' />
              <column datatype='string' name='team2' ordinal='7' />
              <column datatype='string' name='toss_winner' ordinal='8' />
              <column datatype='string' name='toss_decision' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='string' name='result' ordinal='11' />
              <column datatype='integer' name='result_margin' ordinal='12' />
              <column datatype='string' name='method' ordinal='13' />
              <column datatype='string' name='umpire1' ordinal='14' />
              <column datatype='string' name='umpire2' ordinal='15' />
              <column datatype='integer' name='is_playoff' ordinal='16' />
              <column datatype='integer' name='is_eliminator' ordinal='17' />
              <column datatype='integer' name='is_qualifier' ordinal='18' />
              <column datatype='integer' name='is_final' ordinal='19' />
              <column datatype='string' name='home_of' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[ball]' value='[deliveries.csv].[ball]' />
          <map key='[batsman]' value='[deliveries.csv].[batsman]' />
          <map key='[batsman_runs]' value='[deliveries.csv].[batsman_runs]' />
          <map key='[batting_team]' value='[deliveries.csv].[batting_team]' />
          <map key='[bowler]' value='[deliveries.csv].[bowler]' />
          <map key='[bowling_team]' value='[deliveries.csv].[bowling_team]' />
          <map key='[city]' value='[matches.csv].[city]' />
          <map key='[date]' value='[matches.csv].[date]' />
          <map key='[dismissal_kind]' value='[deliveries.csv].[dismissal_kind]' />
          <map key='[extra_runs]' value='[deliveries.csv].[extra_runs]' />
          <map key='[extras_type]' value='[deliveries.csv].[extras_type]' />
          <map key='[fielder]' value='[deliveries.csv].[fielder]' />
          <map key='[home_of]' value='[matches.csv].[home_of]' />
          <map key='[id (matches.csv)]' value='[matches.csv].[id]' />
          <map key='[id]' value='[deliveries.csv].[id]' />
          <map key='[inning]' value='[deliveries.csv].[inning]' />
          <map key='[is_eliminator]' value='[matches.csv].[is_eliminator]' />
          <map key='[is_final]' value='[matches.csv].[is_final]' />
          <map key='[is_playoff]' value='[matches.csv].[is_playoff]' />
          <map key='[is_qualifier]' value='[matches.csv].[is_qualifier]' />
          <map key='[is_wicket]' value='[deliveries.csv].[is_wicket]' />
          <map key='[method]' value='[matches.csv].[method]' />
          <map key='[neutral_venue]' value='[matches.csv].[neutral_venue]' />
          <map key='[non_boundary]' value='[deliveries.csv].[non_boundary]' />
          <map key='[non_striker]' value='[deliveries.csv].[non_striker]' />
          <map key='[over]' value='[deliveries.csv].[over]' />
          <map key='[player_dismissed]' value='[deliveries.csv].[player_dismissed]' />
          <map key='[player_of_match]' value='[matches.csv].[player_of_match]' />
          <map key='[result]' value='[matches.csv].[result]' />
          <map key='[result_margin]' value='[matches.csv].[result_margin]' />
          <map key='[team1]' value='[matches.csv].[team1]' />
          <map key='[team2]' value='[matches.csv].[team2]' />
          <map key='[toss_decision]' value='[matches.csv].[toss_decision]' />
          <map key='[toss_winner]' value='[matches.csv].[toss_winner]' />
          <map key='[total_runs]' value='[deliveries.csv].[total_runs]' />
          <map key='[umpire1]' value='[matches.csv].[umpire1]' />
          <map key='[umpire2]' value='[matches.csv].[umpire2]' />
          <map key='[venue]' value='[matches.csv].[venue]' />
          <map key='[winner]' value='[matches.csv].[winner]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_boundary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_boundary]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_boundary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_wicket</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_wicket]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_wicket</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extras_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extras_type]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extras_type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (matches.csv)]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral_venue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[neutral_venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>neutral_venue</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result_margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result_margin]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result_margin</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_playoff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_playoff]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_playoff</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_eliminator</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_eliminator]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_eliminator</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_qualifier</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_qualifier]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_qualifier</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_final</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_final]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_final</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_of</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_of]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>home_of</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_C4C070A94C08433B8A0423B61F6EF313]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[batsman]' />
      </column>
      <column caption='Batsman Strike Rate (copy)' datatype='real' name='[Batsman Strike Rate (copy)_1209497996456542209]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[batsman_runs]/[ball]*100' />
      </column>
      <column caption='qwerty' datatype='string' name='[Calculation_1503639346724999170]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [winner]== [Parameters].[Parameter 1 1] THEN &quot;Highlight&quot; else &quot;Don&apos;t&quot; END' />
      </column>
      <column caption='Powerplay' datatype='boolean' name='[Calculation_1503639346730278917]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[over]&lt;=6' />
      </column>
      <column caption='exclude function' datatype='string' name='[Calculation_1503639346739343366]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [winner]== [team1] then [Batsman (copy)_1550645667151286272] END' />
      </column>
      <column caption='Home ground Advantage' datatype='integer' name='[Calculation_1503639346756550664]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [venue]: COUNT([home_of])}' />
      </column>
      <column caption='Refrence line' datatype='boolean' name='[Calculation_2257710809152286720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[batsman_runs]&gt;400' />
      </column>
      <column caption='Year_total_runs' datatype='boolean' name='[Calculation_2528771212367962112]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2]=[team1]' />
      </column>
      <column caption='Calculation_matches' datatype='real' name='[Calculation_319474119347052544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(COUNT([__tableau_internal_object_id__].[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229])/6)/19' />
      </column>
      <column caption='Home Of (copy 2)' datatype='string' name='[Home Of (copy 2)_1503639346755371015]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[home_of]' />
      </column>
      <column caption='Home Of (copy)' datatype='string' name='[Home Of (copy)_832603001608437760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[home_of]' />
      </column>
      <column caption='Id (copy)' datatype='integer' name='[Id (copy)_1503639346718597120]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[id]' />
      </column>
      <column aggregation='None' caption='Inning (bin)' datatype='integer' name='[Inning (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[inning]' peg='0' size='2' />
      </column>
      <column aggregation='None' caption='Is Eliminator (copy) (bin)' datatype='integer' name='[Is Eliminator (copy) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Is Eliminator (copy)_742249532789882880]' peg='0' size='3' />
      </column>
      <column caption='Is Eliminator (copy)' datatype='integer' name='[Is Eliminator (copy)_742249532789882880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[is_eliminator]' />
      </column>
      <column caption='Team1 (copy 2)' datatype='string' name='[Team1 (copy 2)_832603001662160900]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team1]' />
      </column>
      <column caption='Team1 (copy)' datatype='string' name='[Team1 (copy)_1550645667154862081]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team1]' />
      </column>
      <column caption='Team2 (copy 2)' datatype='string' name='[Team2 (copy 2)_832603001662181381]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team2]' />
      </column>
      <column caption='Team2 (copy)' datatype='string' name='[Team2 (copy)_1550645667154878466]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[team2]' />
      </column>
      <column caption='Toss Decision (copy)' datatype='string' name='[Toss Decision (copy)_742249532809285633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[toss_decision]' />
      </column>
      <column caption='Toss Winner (copy)' datatype='string' name='[Toss Winner (copy)_742249532809302018]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[toss_winner]' />
      </column>
      <column caption='Umpire1 (copy)' datatype='string' name='[Umpire1 (copy)_2121758395345711104]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[umpire1]' />
      </column>
      <column caption='Umpire2 (copy)' datatype='string' name='[Umpire2 (copy)_2121758395345723393]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[umpire2]' />
      </column>
      <column caption='Winner (copy 2)' datatype='string' name='[Winner (copy 2)_1503639346718810113]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[winner]' />
      </column>
      <column caption='Winner (copy)' datatype='string' name='[Winner (copy)_742249532809498627]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[winner]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[extra_runs]' role='dimension' type='ordinal' />
      <column caption='Extras Type' datatype='string' name='[extras_type]' role='dimension' type='nominal' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Home Of' datatype='string' name='[home_of]' role='dimension' type='nominal' />
      <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Eliminator' datatype='integer' name='[is_eliminator]' role='measure' type='quantitative' />
      <column caption='Is Final' datatype='integer' name='[is_final]' role='measure' type='quantitative' />
      <column caption='Is Playoff' datatype='integer' name='[is_playoff]' role='measure' type='quantitative' />
      <column caption='Is Qualifier' datatype='integer' name='[is_qualifier]' role='measure' type='quantitative' />
      <column caption='Is Wicket' datatype='integer' name='[is_wicket]' role='measure' type='quantitative' />
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal' />
      <column caption='Neutral Venue' datatype='integer' name='[neutral_venue]' role='measure' type='quantitative' />
      <column caption='Non Boundary' datatype='integer' name='[non_boundary]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Result Margin' datatype='integer' name='[result_margin]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inning]' derivation='Avg' name='[avg:inning:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Avg' name='[avg:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_runs]' derivation='Avg' name='[avg:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_wicket]' derivation='Count' name='[cnt:is_wicket:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Count' name='[cnt:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[result_margin]' derivation='Count' name='[cnt:result_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[toss_decision]' derivation='Count' name='[cnt:toss_decision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[toss_winner]' derivation='Count' name='[cnt:toss_winner:qk]' pivot='key' type='quantitative' />
      <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Umpire2 Set]' derivation='InOut' name='[io:Umpire2 Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='Max' name='[max:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[Batsman (copy)_1550645667151286272]' derivation='None' name='[none:Batsman (copy)_1550645667151286272:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1503639346724999170]' derivation='None' name='[none:Calculation_1503639346724999170:nk]' pivot='key' type='nominal' />
      <column-instance column='[Home Of (copy 2)_1503639346755371015]' derivation='None' name='[none:Home Of (copy 2)_1503639346755371015:nk]' pivot='key' type='nominal' />
      <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
      <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
      <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_runs]' derivation='None' name='[none:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[Is Eliminator (copy)_742249532789882880]' derivation='Sum' name='[sum:Is Eliminator (copy)_742249532789882880:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ball]' derivation='Sum' name='[sum:ball:qk]' pivot='key' type='quantitative' />
      <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extra_runs]' derivation='Sum' name='[sum:extra_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_eliminator]' derivation='Sum' name='[sum:is_eliminator:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_final]' derivation='Sum' name='[sum:is_final:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_playoff]' derivation='Sum' name='[sum:is_playoff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_qualifier]' derivation='Sum' name='[sum:is_qualifier:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_wicket]' derivation='Sum' name='[sum:is_wicket:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neutral_venue]' derivation='Sum' name='[sum:neutral_venue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[non_boundary]' derivation='Sum' name='[sum:non_boundary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Sum' name='[sum:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[result_margin]' derivation='Sum' name='[sum:result_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Id (Matches.Csv))' hidden='true' name='[Action (Id (Matches.Csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[id (matches.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Id (copy),Winner (copy 2),Batsman,Winner)' hidden='true' name='[Action (Id (copy),Winner (copy 2),Batsman,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Id (copy)_1503639346718597120]' />
          <groupfilter function='level-members' level='[Winner (copy 2)_1503639346718810113]' />
          <groupfilter function='level-members' level='[batsman]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Id (copy),Winner (copy 2),Winner)' hidden='true' name='[Action (Id (copy),Winner (copy 2),Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Id (copy)_1503639346718597120]' />
          <groupfilter function='level-members' level='[Winner (copy 2)_1503639346718810113]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (Id (copy),Winner (copy 2),YEAR(Date),Winner)' hidden='true' name='[Action (Id (copy),Winner (copy 2),YEAR(Date),Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Id (copy)_1503639346718597120]' />
          <groupfilter function='level-members' level='[Winner (copy 2)_1503639346718810113]' />
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Id,Team1,Winner)' hidden='true' name='[Action (YEAR(Date),Id,Team1,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:date:ok]' />
          <groupfilter function='level-members' level='[id]' />
          <groupfilter function='level-members' level='[team1]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Team1,Team2,Winner)' hidden='true' name='[Action (YEAR(Date),Team1,Team2,Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[team1]' />
          <groupfilter function='level-members' level='[team2]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Top 5 Umpire from Team1' name='[Umpire1 Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[umpire1]' member='&quot;Aleem Dar&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Anil Chaudhary&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Asad Rauf&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Kumar Dharmasena&quot;' />
          <groupfilter function='member' level='[umpire1]' member='&quot;Marais Erasmus&quot;' />
        </groupfilter>
      </group>
      <group caption='Set for Umpire2' name='[Umpire2 Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[umpire2]' member='&quot;C. K. Nandan&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Chettithody Shamshuddin&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Rod Tucker&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Simon Taufel&quot;' />
          <groupfilter function='member' level='[umpire2]' member='&quot;Sundaram Ravi&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Batsman Hierarchy'>
          <field>[Team1 (copy)_1550645667154862081]</field>
          <field>[Team2 (copy)_1550645667154878466]</field>
          <field>[Home Of (copy)_832603001608437760]</field>
        </drill-path>
        <drill-path name='Batsman Hierarchy according to id'>
          <field>[Id (copy)_1503639346718597120]</field>
          <field>[Winner (copy 2)_1503639346718810113]</field>
          <field>[batsman]</field>
        </drill-path>
        <drill-path name='Extras Type, extra_runs'>
          <field>[extras_type]</field>
          <field>[extra_runs]</field>
        </drill-path>
        <drill-path name='Team1 Hierarchy'>
          <field>[Team1 (copy 2)_832603001662160900]</field>
          <field>[Team2 (copy 2)_832603001662181381]</field>
          <field>[home_of]</field>
        </drill-path>
        <drill-path name='Toss Winner Hierarchy (copy)'>
          <field>[Toss Winner (copy)_742249532809302018]</field>
          <field>[Toss Decision (copy)_742249532809285633]</field>
          <field>[Winner (copy)_742249532809498627]</field>
        </drill-path>
        <drill-path name='Umpire1 Hierarchy'>
          <field>[Umpire1 (copy)_2121758395345711104]</field>
          <field>[Umpire2 (copy)_2121758395345723393]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Umpire2 Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1503639346724999170:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Don&apos;t&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Highlight&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Home Of (copy 2)_1503639346755371015:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:extra_runs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[cnt:winner:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[max:winner:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:batsman_runs:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:is_eliminator:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:is_wicket:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:neutral_venue:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[avg:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[avg:inning:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:inning:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[cnt:toss_decision:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:is_final:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[cnt:toss_winner:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:Is Eliminator (copy)_742249532789882880:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[cnt:is_wicket:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:is_qualifier:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:ball:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[avg:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[cnt:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[cnt:result_margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:result_margin:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:non_boundary:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:is_playoff:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[__tableau_internal_object_id__].[cnt:deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:result:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;no result&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;wickets&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;runs&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;no result&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:player_of_match:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ajinkya Rahane&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ben Stokes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jofra Archer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lakshmipathy Balaji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mayank Agarwal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nathan Coulter-Nile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajat Bhatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sanju Samson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sourav Ganguly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ankit Rajpoot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chris Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Faf du Plessis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacob Oram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kevin Pietersen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manish Pandey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morne Morkel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pravin Tambe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ryan Harris&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shreevats Goswami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trent Boult&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Gilchrist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ashoke Dinda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dale Steyn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glenn Maxwell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jason Roy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marcus Stoinis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murali Vijay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rahul Dravid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sam Billings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shubman Gill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Varun Chakravarthy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ambati Rayudu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Billy Stanlake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dilhara Fernando&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harshal Patel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lockie Ferguson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mitchell Marsh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pat Cummins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ravindra Jadeja&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shane Warne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunil Narine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yuzvendra Chahal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ajit Chandila&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benjamin Hilfenhaus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Warner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hardik Pandya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Johan Botha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lasith Malinga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Hussey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nitish Rana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shadab Jakati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sreenath Aravind&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wriddhiman Saha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Voges&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Axar Patel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Daniel Vettori&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Glenn McGrath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jasprit Bumrah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Krunal Pandya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mark Boucher&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rahul Sharma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sam Curran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Siddharth Trivedi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vinay Kumar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anil Kumble&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chaminda Vaas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dwayne Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kedar Jadhav&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manan Vohra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mohnish Mishra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prashanth Parameswaran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shivam Mavi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tim Southee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Finch&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anrich Nortje&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Lynn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Farveez Maharoof&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jacques Kallis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kevon Cooper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manoj Tiwary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mujeeb Ur Rahman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prithvi Shaw&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan McLaren&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shreyas Gopal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andrew Tye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameron White&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Doug Bollinger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karn Sharma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mahendra Singh Dhoni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Piyush Chawla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rohit Sharma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shikhar Dhawan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swapnil Asnodkar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adam Zampa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Daren Sammy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graeme Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaydev Unadkat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlon Samuels&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muttiah Muralitharan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rahul Tewatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sanath Jayasuriya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Simon Katich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virat Kohli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amit Mishra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brad Hodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dimitri Mascarenhas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hashim Amla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Juan Theron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luke Wright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mitchell McClenaghan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Collingwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richard Levi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shane Watson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunny Sohal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaheer Khan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andre Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brendon McCullum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dinesh Karthik&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Herschelle Gibbs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kagiso Rabada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lungi Ngidi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mitchell Starc&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul Valthaty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rishabh Pant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Marsh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suresh Raina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Angelo Mathews&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carlos Brathwaite&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dwayne Bravo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Irfan Pathan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karun Nair&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Makhaya Ntini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mohit Sharma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pragyan Ojha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ross Taylor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shimron Hetmyer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tillakaratne Dilshan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anirudha Srikkanth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chris Gayle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eoin Morgan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ishant Sharma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Keemo Paul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moises Henriques&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Praveen Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ruturaj Gaikwad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tirumalasetti Suman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Albie Morkel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhargav Bhatt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deepak Chahar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jonny Bairstow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laxmi Shukla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Lumb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nuwan Kulasekara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ravi Bopara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahbaz Nadeem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yusuf Pathan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aditya Tare&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ben Cutting&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Hussey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hanuma Vihari&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jesse Ryder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kumar Sangakkara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Hayden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naman Ojha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rahul Tripathi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virender Sehwag&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Morris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gautam Gambhir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Faulkner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khaleel Ahmed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manpreet Gony&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Munaf Patel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Priyam Garg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shreyas Iyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Umesh Yadav&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andrew Symonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brett Lee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dirk Nannes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kane Williamson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mahela Jayawardene&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pawan Negi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robin Uthappa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaun Pollock&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suryakumar Yadav&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alzarri Joseph&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhuvneshwar Kumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Deepak Hooda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harry Gurney&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jos Buttler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lendl Simmons&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mitchell Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parthiv Patel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ravichandran Ashwin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Subramaniam Badrinath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abhishek Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ashish Nehra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corey Anderson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;George Bailey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Franklin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kieron Pollard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manvinder Bisla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murali Kartik&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quinton de Kock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sachin Tendulkar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shrikant Wagh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Varun Aaron&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Batsman (copy)_1550645667151286272:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Aaron Finch&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Deepak Hooda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Jos Buttler&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nicholas Pooran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Robin Uthappa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Shreyas Iyer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;David Warner&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Jonny Bairstow&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Mayank Agarwal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Rishabh Pant&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Shivam Dube&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ajinkya Rahane&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Eoin Morgan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Prithvi Shaw&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sam Curran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sunil Narine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Axar Patel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Hardik Pandya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Rahul Tewatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Shane Watson&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Abdul Samad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Dinesh Karthik&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kieron Pollard&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Pat Cummins&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ruturaj Gaikwad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Steve Smith&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Devdutt Padikkal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kane Williamson&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Nitish Rana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Rohit Sharma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Shubman Gill&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ben Stokes&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Manish Pandey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Rahul Tripathi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Shikhar Dhawan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Wriddhiman Saha&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Chris Gayle&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Jofra Archer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Marcus Stoinis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ravindra Jadeja&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Shimron Hetmyer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Andre Russell&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Glenn Maxwell&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mahendra Singh Dhoni&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Quinton de Kock&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saurabh Tiwary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Virat Kohli&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ambati Rayudu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Faf du Plessis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Krunal Pandya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Priyam Garg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sanju Samson&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Suryakumar Yadav&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:team1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 1' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Chennai Super Kings&quot;'>
          <calculation class='tableau' formula='&quot;Chennai Super Kings&quot;' />
        </column>
        <column caption='Year_total_runs ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Royal Challengers Bangalore&quot;'>
          <calculation class='tableau' formula='&quot;Royal Challengers Bangalore&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229'>
            <properties context=''>
              <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp (copy)' name='deliveries.csv' table='[deliveries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='integer' name='over' ordinal='2' />
                  <column datatype='integer' name='ball' ordinal='3' />
                  <column datatype='string' name='batsman' ordinal='4' />
                  <column datatype='string' name='non_striker' ordinal='5' />
                  <column datatype='string' name='bowler' ordinal='6' />
                  <column datatype='integer' name='batsman_runs' ordinal='7' />
                  <column datatype='integer' name='extra_runs' ordinal='8' />
                  <column datatype='integer' name='total_runs' ordinal='9' />
                  <column datatype='integer' name='non_boundary' ordinal='10' />
                  <column datatype='integer' name='is_wicket' ordinal='11' />
                  <column datatype='string' name='dismissal_kind' ordinal='12' />
                  <column datatype='string' name='player_dismissed' ordinal='13' />
                  <column datatype='string' name='fielder' ordinal='14' />
                  <column datatype='string' name='extras_type' ordinal='15' />
                  <column datatype='string' name='batting_team' ordinal='16' />
                  <column datatype='string' name='bowling_team' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='matches.csv' id='matches.csv_C4C070A94C08433B8A0423B61F6EF313'>
            <properties context=''>
              <relation connection='textscan.06hzp7g1625rug1d415jo0vlzwkp (copy)' name='matches.csv' table='[matches#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='player_of_match' ordinal='3' />
                  <column datatype='string' name='venue' ordinal='4' />
                  <column datatype='integer' name='neutral_venue' ordinal='5' />
                  <column datatype='string' name='team1' ordinal='6' />
                  <column datatype='string' name='team2' ordinal='7' />
                  <column datatype='string' name='toss_winner' ordinal='8' />
                  <column datatype='string' name='toss_decision' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='string' name='result' ordinal='11' />
                  <column datatype='integer' name='result_margin' ordinal='12' />
                  <column datatype='string' name='method' ordinal='13' />
                  <column datatype='string' name='umpire1' ordinal='14' />
                  <column datatype='string' name='umpire2' ordinal='15' />
                  <column datatype='integer' name='is_playoff' ordinal='16' />
                  <column datatype='integer' name='is_eliminator' ordinal='17' />
                  <column datatype='integer' name='is_qualifier' ordinal='18' />
                  <column datatype='integer' name='is_final' ordinal='19' />
                  <column datatype='string' name='home_of' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (matches.csv)]' />
            </expression>
            <first-end-point object-id='deliveries.csv_26FD1F0A8D9E4A85812B3EA10B666229' />
            <second-end-point object-id='matches.csv_C4C070A94C08433B8A0423B61F6EF313' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action10_4FA22E25650741E5BA99D98990D32CB2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Batting and their Venue Performance' type='sheet' worksheet='way of dismissed kind' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Batting and their Venue Performance' />
      </command>
    </action>
    <action caption='Total runs by team1' name='[Action1_30989CE9A6BF416F84E9EC70F63AA8C8]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total runs by id' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total runs by team1' />
      </command>
    </action>
    <action caption='Total runs by team2' name='[Action2_E340D633EE9149D0BD80EB56947E4B25]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total runs by id' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total runs by team2' />
      </command>
    </action>
    <action caption='Winner by id' name='[Action6_481D7E6A162B4AA58AA18E3A621564F5]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total runs by id' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Winner_by id' />
      </command>
    </action>
    <action caption='Filter8' name='[Action8_29FFAD8586814A91BDA2D4E2C5C093A4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final match Team Efficiency' type='sheet' worksheet='IPL winners of every year' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='IPL winners of every year' />
        <param name='special-fields' value='all' />
        <param name='target' value='Final match Team Efficiency' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action9_26261C590CB543399B63822A1122E761]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Efficiency between each match' type='sheet' worksheet='Total runs by id' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Efficiency between each match' />
      </command>
    </action>
    <action caption='Filter1' name='[Action9_A3EDBCF095094BD59B1D9F2092A16A4B]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total runs by id' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total runs in powerplay' />
      </command>
    </action>
    <action caption='Total runs by batsman' name='[Action9_C5E88557ED934AE18D9BFECFE8E292B2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total runs by id' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total runs by Batsman' />
      </command>
    </action>
    <action caption='Filter4' name='[Action9_DDB9E1E161174034AE9589F1E402F2DB]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Neutral Venue_Winner for Mumbai Indians' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Surya kumar Records' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Batsman run in eliminator1,Quarter,semifinal,final'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsman]' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Batsman (copy)_1550645667151286272]' derivation='None' name='[none:Batsman (copy)_1550645667151286272:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Batsman (copy)_1550645667151286272:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Abhinav Mukund&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Albie Morkel&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Anirudha Srikkanth&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Chamara Kapugedera&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Dilhara Fernando&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Dwayne Bravo&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;JP Duminy&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Manpreet Gony&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Michael Hussey&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Mohammad Kaif&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Niraj Patel&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Rajagopal Sathish&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Ravindra Jadeja&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Saurabh Tiwary&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Shane Warne&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Sohail Tanvir&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Stephen Fleming&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Subramaniam Badrinath&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Taruwar Kohli&quot;' />
                    <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Vidyut Sivaramakrishnan&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]'>
            <groupfilter function='member' level='[none:winner:nk]' member='&quot;Deccan Chargers&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2009' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk])</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk])</cols>
      </table>
      <simple-id uuid='{C3876F1D-99EC-491A-8FB0-EB519417A0FE}' />
    </worksheet>
    <worksheet name='Batsman run in final'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsman]' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Batsman (copy)_1550645667151286272]' derivation='None' name='[none:Batsman (copy)_1550645667151286272:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[team2]' derivation='None' name='[none:team2:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Team1,Team2,Winner)]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action8_29FFAD8586814A91BDA2D4E2C5C093A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[team1]' member='&quot;Chennai Super Kings&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[team2]' member='&quot;Mumbai Indians&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[winner]' member='&quot;Mumbai Indians&quot;' />
                    <groupfilter function='member' level='[yr:date:ok]' member='2013' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[yr:date:ok]' />
                <hierarchy name='[team1]' />
                <hierarchy name='[team2]' />
                <hierarchy name='[winner]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Batsman (copy)_1550645667151286272:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Abhinav Mukund&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Albie Morkel&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Anirudha Srikkanth&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Chamara Kapugedera&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Dilhara Fernando&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Dwayne Bravo&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;JP Duminy&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Manpreet Gony&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Michael Hussey&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Mohammad Kaif&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Niraj Patel&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Rajagopal Sathish&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Ravindra Jadeja&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Saurabh Tiwary&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Shane Warne&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Sohail Tanvir&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Stephen Fleming&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Subramaniam Badrinath&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Taruwar Kohli&quot;' />
                <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Vidyut Sivaramakrishnan&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Team1,Team2,Winner)]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk])))</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk])</cols>
      </table>
      <simple-id uuid='{A75EA084-441C-4FAF-A4A5-64E5EDB7CFCF}' />
    </worksheet>
    <worksheet name='Batting Team total runs_By_ Innings'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column aggregation='None' caption='Inning (bin)' datatype='integer' name='[Inning (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[inning]' peg='0' size='2' />
            </column>
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inning' datatype='integer' name='[inning]' role='dimension' type='ordinal' />
            <column-instance column='[Inning (bin)]' derivation='None' name='[none:Inning (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Inning (bin):ok]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]</cols>
        <show-full-range>
          <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Inning (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{FD61FC3F-07B2-4212-8201-A38C122761BA}' />
    </worksheet>
    <worksheet name='Count of Umpire'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Umpire1 (copy)' datatype='string' name='[Umpire1 (copy)_2121758395345711104]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[umpire1]' />
            </column>
            <column caption='Umpire2 (copy)' datatype='string' name='[Umpire2 (copy)_2121758395345723393]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[umpire2]' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Umpire1 (copy)_2121758395345711104]' derivation='None' name='[none:Umpire1 (copy)_2121758395345711104:nk]' pivot='key' type='nominal' />
            <column-instance column='[Umpire2 (copy)_2121758395345723393]' derivation='None' name='[none:Umpire2 (copy)_2121758395345723393:nk]' pivot='key' type='nominal' />
            <column-instance column='[umpire1]' derivation='None' name='[none:umpire1:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
            <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Umpire2 (copy)_2121758395345723393:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Umpire2 (copy)_2121758395345723393:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:umpire1:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:umpire1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Umpire2 (copy)_2121758395345723393:nk]' direction='DESC' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:umpire1:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Umpire2 (copy)_2121758395345723393:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Umpire1 (copy)_2121758395345711104:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Set 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Umpire1 (copy)_2121758395345711104:nk] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Umpire2 (copy)_2121758395345723393:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]))</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]</cols>
      </table>
      <simple-id uuid='{EBF5C3D6-7DC4-440C-BF0D-935106B708E8}' />
    </worksheet>
    <worksheet name='Count of Venue'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]'>
            <groupfilter function='level-members' level='[dismissal_kind]' user:ui-action-filter='[Action10_4FA22E25650741E5BA99D98990D32CB2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:venue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='454' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' />
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5BBA6E31-361F-4031-9E4F-6E57B5A3A4E3}' />
    </worksheet>
    <worksheet name='Extra runs and Over_by_Bowler '>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
            <column caption='Extras Type' datatype='string' name='[extras_type]' role='dimension' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[extras_type]' derivation='None' name='[none:extras_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[extra_runs]' derivation='Sum' name='[sum:extra_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Chennai Super Kings&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Deccan Chargers&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Delhi Capitals&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Gujarat Lions&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Kings XI Punjab&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Kochi Tuskers Kerala&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Kolkata Knight Riders&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Mumbai Indians&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Pune Warriors India&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Rajasthan Royals&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Rising Pune Supergiant&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Royal Challengers Bangalore&quot;' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Sunrisers Hyderabad&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([ball])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]'>
            <groupfilter from='&quot;byes&quot;' function='range' level='[none:extras_type:nk]' to='&quot;wides&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' filter-group='6'>
            <groupfilter function='member' level='[yr:date:ok]' member='2011' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowling_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:extra_runs:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]' direction='DESC' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:extra_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowling_team:nk]))</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:extra_runs:qk]</cols>
      </table>
      <simple-id uuid='{0A520A19-493C-40EB-9946-61E713BA95C4}' />
    </worksheet>
    <worksheet name='Home town_Winners'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Home Of (copy 2)' datatype='string' name='[Home Of (copy 2)_1503639346755371015]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[home_of]' />
            </column>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column caption='Home Of' datatype='string' name='[home_of]' role='dimension' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Home Of (copy 2)_1503639346755371015]' derivation='None' name='[none:Home Of (copy 2)_1503639346755371015:nk]' pivot='key' type='nominal' />
            <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Home Of (copy 2)_1503639346755371015:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Home Of (copy 2)_1503639346755371015:nk]' member='&quot;Delhi Capitals&quot;' />
              <groupfilter function='member' level='[none:Home Of (copy 2)_1503639346755371015:nk]' member='&quot;Kolkata Knight Riders&quot;' />
              <groupfilter function='member' level='[none:Home Of (copy 2)_1503639346755371015:nk]' member='&quot;Royal Challengers Bangalore&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([winner])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:venue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Chennai Super Kings&quot;' function='range' level='[none:winner:nk]' to='&quot;Mumbai Indians&quot;' />
              <groupfilter from='&quot;Pune Warriors India&quot;' function='range' level='[none:winner:nk]' to='&quot;Sunrisers Hyderabad&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Home Of (copy 2)_1503639346755371015:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Set 2:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Home Of (copy 2)_1503639346755371015:nk]))</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk])</cols>
      </table>
      <simple-id uuid='{724E3EFC-C15B-456C-8DAA-52ABC109FEF2}' />
    </worksheet>
    <worksheet name='IPL winners of every year'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Is Final' datatype='integer' name='[is_final]' role='measure' type='quantitative' />
            <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
            <column-instance column='[team2]' derivation='None' name='[none:team2:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_final]' derivation='Sum' name='[sum:is_final:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows total='true'>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk])</rows>
        <cols total='true'>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk])</cols>
      </table>
      <simple-id uuid='{DD577122-AFB3-438B-B24B-C72D53BD87B2}' />
    </worksheet>
    <worksheet name='Impact of winning by a player'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column-instance column='[over]' derivation='Avg' name='[avg:over:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([player_of_match])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:player_of_match:nk]' member='%null%' />
                  <groupfilter from='&quot;Aaron Finch&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Zaheer Khan&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[avg:over:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[avg:over:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk] + [federated.0rjbqjx1b0qyed187ohy617gcjz3].[avg:over:qk])</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]))</cols>
      </table>
      <simple-id uuid='{D968B6DF-C08F-479F-8BB1-4BF0D202A3A0}' />
    </worksheet>
    <worksheet name='Maximum_Player_of_match'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column-instance column='[player_of_match]' derivation='Count' name='[cnt:player_of_match:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]'>
            <groupfilter function='level-members' level='[dismissal_kind]' user:ui-action-filter='[Action10_4FA22E25650741E5BA99D98990D32CB2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batsman:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([player_of_match])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]'>
            <groupfilter count='6' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([player_of_match])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:player_of_match:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='%null%' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Aaron Finch&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Adam Gilchrist&quot;' />
                    <groupfilter from='&quot;Adam Zampa&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Anirudha Srikkanth&quot;' />
                    <groupfilter from='&quot;Anrich Nortje&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Brendon McCullum&quot;' />
                    <groupfilter from='&quot;Cameron White&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Chaminda Vaas&quot;' />
                    <groupfilter from='&quot;Chris Lynn&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Dale Steyn&quot;' />
                    <groupfilter from='&quot;David Hussey&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Deepak Chahar&quot;' />
                    <groupfilter from='&quot;Dilhara Fernando&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Dwayne Smith&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Faf du Plessis&quot;' />
                    <groupfilter from='&quot;Gautam Gambhir&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Iqbal Abdulla&quot;' />
                    <groupfilter from='&quot;Ishan Kishan&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Kedar Jadhav&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Kevin Pietersen&quot;' />
                    <groupfilter from='&quot;Kieron Pollard&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Lasith Malinga&quot;' />
                    <groupfilter from='&quot;Lendl Simmons&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Mahela Jayawardene&quot;' />
                    <groupfilter from='&quot;Makhaya Ntini&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Manoj Tiwary&quot;' />
                    <groupfilter from='&quot;Manvinder Bisla&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Michael Hussey&quot;' />
                    <groupfilter from='&quot;Mitchell Johnson&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Mitchell Starc&quot;' />
                    <groupfilter from='&quot;Mohammed Siraj&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Morne Morkel&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Munaf Patel&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Murali Vijay&quot;' />
                    <groupfilter from='&quot;Muttiah Muralitharan&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Pragyan Ojha&quot;' />
                    <groupfilter from='&quot;Praveen Kumar&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Robin Uthappa&quot;' />
                    <groupfilter from='&quot;Ross Taylor&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Sam Billings&quot;' />
                    <groupfilter from='&quot;Sanath Jayasuriya&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Shivam Mavi&quot;' />
                    <groupfilter from='&quot;Shreyas Gopal&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Shubman Gill&quot;' />
                    <groupfilter from='&quot;Sohail Tanvir&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Sunil Narine&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Suryakumar Yadav&quot;' />
                    <groupfilter from='&quot;Tillakaratne Dilshan&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Trent Boult&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Umesh Yadav&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Varun Aaron&quot;' />
                    <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;Vinay Kumar&quot;' />
                    <groupfilter from='&quot;Virender Sehwag&quot;' function='range' level='[none:player_of_match:nk]' to='&quot;Zaheer Khan&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:player_of_match:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batsman:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:player_of_match:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:player_of_match:qk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]</cols>
      </table>
      <simple-id uuid='{DA49EC22-36A8-4779-8AA9-D25E87B0CF60}' />
    </worksheet>
    <worksheet name='Maximum_dismissed_player'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[dismissal_kind]' derivation='Count' name='[cnt:dismissal_kind:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_dismissed]' derivation='None' name='[none:player_dismissed:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]'>
            <groupfilter function='level-members' level='[dismissal_kind]' user:ui-action-filter='[Action10_4FA22E25650741E5BA99D98990D32CB2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;bowled&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught and bowled&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;lbw&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;run out&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;stumped&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_dismissed:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([dismissal_kind])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:player_dismissed:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_dismissed:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:dismissal_kind:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_dismissed:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]' value='219' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:dismissal_kind:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:dismissal_kind:qk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:dismissal_kind:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_dismissed:nk]</rows>
        <cols total='true'>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]</cols>
      </table>
      <simple-id uuid='{E185F45B-D15E-46FF-A65C-BC530F9D7A7B}' />
    </worksheet>
    <worksheet name='Neutral Venue_Winner for Mumbai Indians'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[neutral_venue]' derivation='Count' name='[cnt:neutral_venue:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Neutral Venue' datatype='integer' name='[neutral_venue]' role='measure' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([neutral_venue])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:winner:nk]' member='&quot;Mumbai Indians&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[tyr:date:ok]' filter-group='5'>
            <groupfilter function='member' level='[tyr:date:ok]' member='#2019-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:neutral_venue:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[tyr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:neutral_venue:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[tyr:date:ok] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:neutral_venue:qk])</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{535F0D52-98CB-4FB5-B86D-E0662611EFD7}' />
    </worksheet>
    <worksheet name='Surya kumar Records'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsman]' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Batsman (copy)_1550645667151286272]' derivation='None' name='[none:Batsman (copy)_1550645667151286272:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_DDB9E1E161174034AE9589F1E402F2DB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:date:ok]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]'>
            <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Mumbai Indians&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[tyr:date:ok]' filter-group='5'>
            <groupfilter function='member' level='[tyr:date:ok]' member='#2019-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Winner)]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[tyr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk])</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk])</cols>
      </table>
      <simple-id uuid='{B4399BE8-9AB1-429C-9CBB-3C7DB760B5A5}' />
    </worksheet>
    <worksheet name='Team  Toss Decision and Won'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[toss_decision]' derivation='Count' name='[cnt:toss_decision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[toss_winner]' derivation='Count' name='[cnt:toss_winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[team2]' derivation='None' name='[none:team2:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_decision:qk]' />
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_winner:qk]' />
              <lod column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:toss_decision:nk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:toss_winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{898C11DF-93B3-4DE1-BFDD-797959497AB3}' />
    </worksheet>
    <worksheet name='Team Wicket count'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[is_wicket]' derivation='Count' name='[cnt:is_wicket:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Umpire2 Set]' derivation='InOut' name='[io:Umpire2 Set:nk]' pivot='key' type='nominal' />
            <column caption='Is Wicket' datatype='integer' name='[is_wicket]' role='measure' type='quantitative' />
            <column-instance column='[umpire1]' derivation='None' name='[none:umpire1:nk]' pivot='key' type='nominal' />
            <column-instance column='[umpire2]' derivation='None' name='[none:umpire2:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
            <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Umpire2 Set:nk]'>
            <groupfilter function='member' level='[io:Umpire2 Set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([is_wicket])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:umpire2:nk]' direction='DESC' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:is_wicket:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Umpire2 Set:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Umpire2 Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:umpire1:nk] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:umpire2:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]))</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:is_wicket:qk]</cols>
      </table>
      <simple-id uuid='{5FBDDE47-669C-4ECF-B245-D03AE65F5DAA}' />
    </worksheet>
    <worksheet name='Team playoff_qualifier_final_eliminator'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Is Eliminator' datatype='integer' name='[is_eliminator]' role='measure' type='quantitative' />
            <column caption='Is Final' datatype='integer' name='[is_final]' role='measure' type='quantitative' />
            <column caption='Is Playoff' datatype='integer' name='[is_playoff]' role='measure' type='quantitative' />
            <column caption='Is Qualifier' datatype='integer' name='[is_qualifier]' role='measure' type='quantitative' />
            <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_eliminator]' derivation='Sum' name='[sum:is_eliminator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_final]' derivation='Sum' name='[sum:is_final:qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_playoff]' derivation='Sum' name='[sum:is_playoff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_qualifier]' derivation='Sum' name='[sum:is_qualifier:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_playoff:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_qualifier:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_eliminator:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_playoff:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_qualifier:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_eliminator:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]' included-values='in-range'>
            <min>1</min>
            <max>500</max>
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names])</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{D52821EA-78EB-4768-854C-E0D99065240E}' />
    </worksheet>
    <worksheet name='Top Batsman Strike rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+ (2)' name='federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)'>
            <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsman]' />
            </column>
            <column caption='Batsman Strike Rate (copy)' datatype='real' name='[Batsman Strike Rate (copy)_1209497996456542209]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[batsman_runs]/[ball]*100' />
            </column>
            <column-instance column='[Batsman Strike Rate (copy)_1209497996456542209]' derivation='Avg' name='[avg:Batsman Strike Rate (copy)_1209497996456542209:qk]' pivot='key' type='quantitative' />
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Batsman (copy)_1550645667151286272]' derivation='None' name='[none:Batsman (copy)_1550645667151286272:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;AB de Villiers&quot;' />
              <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Abdul Samad&quot;' />
              <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Jofra Archer&quot;' />
              <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Kieron Pollard&quot;' />
              <groupfilter function='member' level='[none:Batsman (copy)_1550645667151286272:nk]' member='&quot;Suryakumar Yadav&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:batsman_runs:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]' direction='DESC' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[avg:Batsman Strike Rate (copy)_1209497996456542209:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[avg:Batsman Strike Rate (copy)_1209497996456542209:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:batsman_runs:qk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:batsman_runs:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok]' value='79' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]' />
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[avg:Batsman Strike Rate (copy)_1209497996456542209:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]' />
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:batsman_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]' />
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[avg:Batsman Strike Rate (copy)_1209497996456542209:qk] + [federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:batsman_runs:qk])</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok])</cols>
      </table>
      <simple-id uuid='{D0869818-E8A7-4F35-8BD6-3E3B50FC5C5E}' />
    </worksheet>
    <worksheet name='Toss Decision_Winner'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[toss_decision]' derivation='Count' name='[cnt:toss_decision:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:toss_decision:nk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_decision:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_decision:qk]</cols>
      </table>
      <simple-id uuid='{66A71E6A-547C-440F-8425-B733ED756AA6}' />
    </worksheet>
    <worksheet name='Toss decision and winner'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]'>
            <groupfilter function='level-members' level='[dismissal_kind]' user:ui-action-filter='[Action10_4FA22E25650741E5BA99D98990D32CB2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:toss_decision:nk]' value='168' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk]</rows>
        <cols total='true'>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:toss_decision:nk]</cols>
      </table>
      <simple-id uuid='{7B4EF5F3-674C-4629-976E-F67AB801917D}' />
    </worksheet>
    <worksheet name='Toss win by Winner'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[toss_winner]' derivation='Count' name='[cnt:toss_winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([winner])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' filter-group='6'>
            <groupfilter function='member' level='[yr:date:ok]' member='2011' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' direction='DESC' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_winner:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk])</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk]</cols>
      </table>
      <simple-id uuid='{B10480B8-CAB0-4974-8E71-07445F803AB4}' />
    </worksheet>
    <worksheet name='Total runs by Batsman'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsman]' />
            </column>
            <column caption='Calculation1' datatype='boolean' name='[Calculation_2326390703831420931]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [winner]= [team1] then [inning]=1 ELSE [inning]=2 END' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Inning' datatype='integer' name='[inning]' role='dimension' type='ordinal' />
            <column-instance column='[Batsman (copy)_1550645667151286272]' derivation='None' name='[none:Batsman (copy)_1550645667151286272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2326390703831420931]' derivation='None' name='[none:Calculation_2326390703831420931:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
            <groupfilter function='member' level='[id (matches.csv)]' member='829795' user:ui-action-filter='[Action9_C5E88557ED934AE18D9BFECFE8E292B2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Calculation_2326390703831420931:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2326390703831420931:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_2326390703831420931:nk]' member='true' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Calculation_2326390703831420931:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]' value='144' />
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]' value='76' />
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' value='56' />
            <format attr='background-color' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' value='#f5eddc' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' value='bold' />
            <format attr='text-decoration' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' value='underline' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='506' />
                <format attr='maxwidth' value='506' />
                <format attr='minheight' value='100' />
                <format attr='maxheight' value='100' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk])</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk])</cols>
      </table>
      <simple-id uuid='{E13E25E8-59BF-4B8B-BDB2-4DD1F95BB9F7}' />
    </worksheet>
    <worksheet name='Total runs by id'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[id (matches.csv)]' derivation='None' name='[none:id (matches.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_runs])' function='order' user:ui-marker='order'>
                <groupfilter from='335982' function='range' level='[none:id (matches.csv):ok]' to='1237181' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]' direction='DESC' />
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</cols>
      </table>
      <simple-id uuid='{CE4DC755-FDB4-4EEE-A98D-5E3CE61B1768}' />
    </worksheet>
    <worksheet name='Total runs by team1'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[id (matches.csv)]' derivation='None' name='[none:id (matches.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
            <groupfilter function='member' level='[id (matches.csv)]' member='829795' user:ui-action-filter='[Action1_30989CE9A6BF416F84E9EC70F63AA8C8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:id (matches.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]' value='254' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] / ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[qr:date:ok] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]))</cols>
      </table>
      <simple-id uuid='{AB69E5E1-245D-47A6-8EE0-684D3138AC63}' />
    </worksheet>
    <worksheet name='Total runs by team2'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[id (matches.csv)]' derivation='None' name='[none:id (matches.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[team2]' derivation='None' name='[none:team2:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
            <groupfilter function='member' level='[id (matches.csv)]' member='829795' user:ui-action-filter='[Action2_E340D633EE9149D0BD80EB56947E4B25]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:id (matches.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]' value='303' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk])</cols>
      </table>
      <simple-id uuid='{F1F97CEA-2560-4B51-8278-4E1D8FC2381D}' />
    </worksheet>
    <worksheet name='Total runs in powerplay'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Powerplay' datatype='boolean' name='[Calculation_1503639346730278917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[over]&lt;=6' />
            </column>
            <column-instance column='[total_runs]' derivation='Avg' name='[avg:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1503639346730278917]' derivation='None' name='[none:Calculation_1503639346730278917:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
            <groupfilter function='member' level='[id (matches.csv)]' member='829795' user:ui-action-filter='[Action9_26261C590CB543399B63822A1122E761]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Calculation_1503639346730278917:nk]'>
            <groupfilter function='member' level='[none:Calculation_1503639346730278917:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id:ok]'>
            <groupfilter from='335982' function='range' level='[none:id:ok]' to='1237181' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[avg:total_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Calculation_1503639346730278917:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id:ok]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]' value='211' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' />
              <text column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]</cols>
      </table>
      <simple-id uuid='{378AC7B1-F722-4F50-B8F7-91BECE96B3DA}' />
    </worksheet>
    <worksheet name='Total_runs_by_batsman'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Batsman (copy)' datatype='string' name='[Batsman (copy)_1550645667151286272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsman]' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[Batsman (copy)_1550645667151286272]' derivation='None' name='[none:Batsman (copy)_1550645667151286272:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]'>
            <groupfilter function='level-members' level='[dismissal_kind]' user:ui-action-filter='[Action10_4FA22E25650741E5BA99D98990D32CB2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Batsman (copy)_1550645667151286272:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Batsman (copy)_1550645667151286272:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batsman:nk]</cols>
      </table>
      <simple-id uuid='{C9F4D78D-F9FA-49B7-8FD5-B9995E049C27}' />
    </worksheet>
    <worksheet name='Trend for year total runs'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+ (2)' name='federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Year_total_runs ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Royal Challengers Bangalore&quot;'>
              <calculation class='tableau' formula='&quot;Royal Challengers Bangalore&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)'>
            <column caption='Year_total_runs' datatype='boolean' name='[Calculation_2528771212367962112]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]=[team1]' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Is Wicket' datatype='integer' name='[is_wicket]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2528771212367962112]' derivation='None' name='[none:Calculation_2528771212367962112:nk]' pivot='key' type='nominal' />
            <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_wicket]' derivation='Sum' name='[sum:is_wicket:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Calculation_2528771212367962112:nk]'>
            <groupfilter function='member' level='[none:Calculation_2528771212367962112:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Calculation_2528771212367962112:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:team1:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:total_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:team1:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:is_wicket:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:team1:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:total_runs:qk] + [federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[sum:is_wicket:qk])</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{7FFE1F14-0A74-4856-8893-88DFD22D8645}' />
    </worksheet>
    <worksheet name='Winner by Venue'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([winner])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:venue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:venue:nk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:winner:qk]</cols>
      </table>
      <simple-id uuid='{585DF17A-95BF-4307-8533-FCEB1A158D45}' />
    </worksheet>
    <worksheet name='Winner result margin'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Team1,Team2,Winner)]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action8_29FFAD8586814A91BDA2D4E2C5C093A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[team1]' member='&quot;Chennai Super Kings&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[team2]' member='&quot;Mumbai Indians&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[winner]' member='&quot;Mumbai Indians&quot;' />
                    <groupfilter function='member' level='[yr:date:ok]' member='2013' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[yr:date:ok]' />
                <hierarchy name='[team1]' />
                <hierarchy name='[team2]' />
                <hierarchy name='[winner]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:result:nk]' member='&quot;runs&quot;' />
              <groupfilter function='member' level='[none:result:nk]' member='&quot;wickets&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Team1,Team2,Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' value='23' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk])</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:batsman_runs:qk])</cols>
      </table>
      <simple-id uuid='{5002BCE3-ECE5-40B1-887F-276F2D7767B6}' />
    </worksheet>
    <worksheet name='Winner_by id'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Id (copy)' datatype='integer' name='[Id (copy)_1503639346718597120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[id]' />
            </column>
            <column caption='Winner (copy 2)' datatype='string' name='[Winner (copy 2)_1503639346718810113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[winner]' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Id (copy)_1503639346718597120]' derivation='None' name='[none:Id (copy)_1503639346718597120:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Winner (copy 2)_1503639346718810113]' derivation='None' name='[none:Winner (copy 2)_1503639346718810113:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
            <groupfilter function='member' level='[id (matches.csv)]' member='501223' user:ui-action-filter='[Action6_481D7E6A162B4AA58AA18E3A621564F5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batsman:nk]' value='228' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Id (copy)_1503639346718597120:ok] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Winner (copy 2)_1503639346718810113:nk])</rows>
        <cols>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] * [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk])</cols>
      </table>
      <simple-id uuid='{81B483AB-7F1A-4475-B4DB-66D397E9895A}' />
    </worksheet>
    <worksheet name='count Extra type'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Extras Type' datatype='string' name='[extras_type]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[extras_type]' derivation='None' name='[none:extras_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;byes&quot;' function='range' level='[none:extras_type:nk]' to='&quot;noballs&quot;' />
              <groupfilter function='member' level='[none:extras_type:nk]' member='&quot;penalty&quot;' />
              <groupfilter function='member' level='[none:extras_type:nk]' member='&quot;wides&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk] / [federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk])</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]</cols>
      </table>
      <simple-id uuid='{28E5A7CC-1111-44FD-B30E-D64ABF8961C3}' />
    </worksheet>
    <worksheet name='highest bowlers runs based on IPL winners'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='overs per year(Include LOD)' datatype='integer' name='[Calculation_303148571285135361]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [id]:COUNTD([over])}' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[is_wicket]' derivation='Count' name='[cnt:is_wicket:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Wicket' datatype='integer' name='[is_wicket]' role='measure' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_303148571285135361]' derivation='Sum' name='[sum:Calculation_303148571285135361:qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_wicket]' derivation='Sum' name='[sum:is_wicket:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([is_wicket])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' filter-group='6'>
            <groupfilter function='member' level='[yr:date:ok]' member='2011' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:is_wicket:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:Calculation_303148571285135361:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_wicket:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:Calculation_303148571285135361:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok] * ([federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_wicket:qk] + [federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:Calculation_303148571285135361:qk]))</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{DBFDC980-486F-4B78-814B-478EFCEC75A8}' />
    </worksheet>
    <worksheet name='is_Final'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column caption='Is Final' datatype='integer' name='[is_final]' role='measure' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Result Margin' datatype='integer' name='[result_margin]' role='measure' type='quantitative' />
            <column-instance column='[is_final]' derivation='Sum' name='[sum:is_final:qk]' pivot='key' type='quantitative' />
            <column-instance column='[result_margin]' derivation='Sum' name='[sum:result_margin:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]'>
            <groupfilter function='level-members' level='[dismissal_kind]' user:ui-action-filter='[Action10_4FA22E25650741E5BA99D98990D32CB2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([is_final])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</column>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Dismissal Kind)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:result_margin:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{70BD667F-32BA-4C2B-8B16-F1ACD5E26579}' />
    </worksheet>
    <worksheet name='way of dismissed kind'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313]' role='measure' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[matches.csv_C4C070A94C08433B8A0423B61F6EF313])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;bowled&quot;' function='range' level='[none:dismissal_kind:nk]' to='&quot;obstructing the field&quot;' />
                  <groupfilter from='&quot;retired hurt&quot;' function='range' level='[none:dismissal_kind:nk]' to='&quot;stumped&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]' value='81' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]</rows>
        <cols>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:dismissal_kind:nk]</cols>
      </table>
      <simple-id uuid='{ADD31343-05F1-4F5D-8904-F16165375EAC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Batting and their Venue Performance'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='33250' id='3' name='Total_runs_by_batsman' w='35500' x='800' y='1500' />
        <zone h='33250' id='4' name='Maximum_Player_of_match' w='32000' x='37000' y='1750' />
        <zone h='28500' id='5' name='Maximum_dismissed_player' w='44900' x='1200' y='36750' />
        <zone h='25875' id='7' name='is_Final' w='50000' x='46500' y='39125' />
        <zone h='34500' id='8' name='Count of Venue' w='45900' x='900' y='65125' />
        <zone h='31000' id='9' name='way of dismissed kind' w='49000' x='46400' y='68500' />
        <zone h='35625' id='10' name='Toss decision and winner' w='23400' x='71500' y='875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='49' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='35625' id='10' is-fixed='true' name='Toss decision and winner' w='23400' x='71500' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='3' is-fixed='true' name='Total_runs_by_batsman' w='35500' x='800' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='4' is-fixed='true' name='Maximum_Player_of_match' w='32000' x='37000' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='228' h='28500' id='5' is-fixed='true' name='Maximum_dismissed_player' w='44900' x='1200' y='36750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='207' h='25875' id='7' is-fixed='true' name='is_Final' w='50000' x='46500' y='39125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='34500' id='8' is-fixed='true' name='Count of Venue' w='45900' x='900' y='65125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='31000' id='9' is-fixed='true' name='way of dismissed kind' w='49000' x='46400' y='68500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A1D73191-1D1D-4D22-A222-5A6997274F6B}' />
    </dashboard>
    <dashboard name='Bowlers Performance'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='deliveries+' name='federated.0rjbqjx1b0qyed187ohy617gcjz3' />
      </datasources>
      <datasource-dependencies datasource='federated.0rjbqjx1b0qyed187ohy617gcjz3'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='41125' id='9' name='highest bowlers runs based on IPL winners' w='46100' x='52900' y='10500' />
        <zone h='46625' id='11' name='Extra runs and Over_by_Bowler ' w='98600' x='400' y='52750' />
        <zone h='41250' id='13' name='Toss win by Winner' w='49600' x='1400' y='12000' />
        <zone h='9250' id='14' mode='dropdown' name='Toss win by Winner' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' type-v2='filter' values='database' w='16000' x='83700' y='1375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='47' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='41125' id='9' is-fixed='true' name='highest bowlers runs based on IPL winners' w='46100' x='52900' y='10500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9250' id='14' mode='dropdown' name='Toss win by Winner' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' type-v2='filter' values='database' w='16000' x='83700' y='1375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41250' id='13' is-fixed='true' name='Toss win by Winner' w='49600' x='1400' y='12000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46625' id='11' is-fixed='true' name='Extra runs and Over_by_Bowler ' w='98600' x='400' y='52750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9AA7905E-C03B-4C08-A6BA-80D208859A6F}' />
    </dashboard>
    <dashboard name='Final match Team Efficiency'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='43' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='46375' id='45' name='IPL winners of every year' w='98700' x='800' y='1125' />
        <zone h='50500' id='46' name='Winner result margin' w='44900' x='800' y='48125' />
        <zone h='50750' id='48' name='Batsman run in final' w='52800' x='46500' y='48000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='96' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='95' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='46375' id='45' is-fixed='true' name='IPL winners of every year' w='98700' x='800' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50750' id='48' is-fixed='true' name='Batsman run in final' w='52800' x='46500' y='48000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50500' id='46' is-fixed='true' name='Winner result margin' w='44900' x='800' y='48125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5408E760-8419-4FF1-82B7-67D0F69C318B}' />
    </dashboard>
    <dashboard name='Match Efficiency between each match'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='33250' id='3' name='Total runs by id' w='38800' x='500' y='250' />
        <zone h='31625' id='4' name='Total runs by team1' w='47300' x='600' y='34250' />
        <zone h='30375' id='5' name='Total runs by team2' w='47200' x='200' y='68625' />
        <zone h='62375' id='8' name='Total runs by Batsman' w='49300' x='49900' y='36500' />
        <zone h='30750' id='10' name='Total runs in powerplay' w='48200' x='47700' y='3000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='59' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='58' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='266' h='33250' id='3' is-fixed='true' name='Total runs by id' w='38800' x='500' y='250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='30750' id='10' is-fixed='true' name='Total runs in powerplay' w='48200' x='47700' y='3000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='31625' id='4' is-fixed='true' name='Total runs by team1' w='47300' x='600' y='34250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62375' id='8' is-fixed='true' name='Total runs by Batsman' w='49300' x='49900' y='36500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='30375' id='5' is-fixed='true' name='Total runs by team2' w='47200' x='200' y='68625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4C5EF789-91D4-41A6-B836-470766FAD272}' />
    </dashboard>
    <dashboard name='Story on IPL' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='451' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='5187' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6017' />
            <zone h='82676' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='16494'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Match Efficiency between each match based on ID' captured-sheet='Match Efficiency between each match' id='1'>
                    <capturedDeltas>
                      <worksheet name='Total runs by Batsman'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
                          <groupfilter function='member' level='[id (matches.csv)]' member='1082641' user:ui-action-filter='[Action9_C5E88557ED934AE18D9BFECFE8E292B2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total runs by id'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1082641</value>
                                <value>453</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Total runs by team1'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
                          <groupfilter function='member' level='[id (matches.csv)]' member='1082641' user:ui-action-filter='[Action1_30989CE9A6BF416F84E9EC70F63AA8C8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total runs by team2'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
                          <groupfilter function='member' level='[id (matches.csv)]' member='1082641' user:ui-action-filter='[Action2_E340D633EE9149D0BD80EB56947E4B25]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total runs in powerplay'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (Id (Matches.Csv))]'>
                          <groupfilter function='member' level='[id (matches.csv)]' member='1082641' user:ui-action-filter='[Action9_26261C590CB543399B63822A1122E761]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Final match Team Efficiency' captured-sheet='Final match Team Efficiency' id='2'>
                    <capturedDeltas>
                      <worksheet name='Batsman run in final'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Team1,Team2,Winner)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action8_29FFAD8586814A91BDA2D4E2C5C093A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[team1]' member='&quot;Chennai Super Kings&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[team2]' member='&quot;Rajasthan Royals&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[winner]' member='&quot;Rajasthan Royals&quot;' />
                                  <groupfilter function='member' level='[yr:date:ok]' member='2008' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[yr:date:ok]' />
                              <hierarchy name='[team1]' />
                              <hierarchy name='[team2]' />
                              <hierarchy name='[winner]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='IPL winners of every year'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</field>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Chennai Super Kings&quot;</value>
                                <value>&quot;Rajasthan Royals&quot;</value>
                                <value>&quot;Rajasthan Royals&quot;</value>
                                <value>1</value>
                                <value>2008</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Winner result margin'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[Action (YEAR(Date),Team1,Team2,Winner)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action8_29FFAD8586814A91BDA2D4E2C5C093A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[team1]' member='&quot;Chennai Super Kings&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[team2]' member='&quot;Rajasthan Royals&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[winner]' member='&quot;Rajasthan Royals&quot;' />
                                  <groupfilter function='member' level='[yr:date:ok]' member='2008' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[yr:date:ok]' />
                              <hierarchy name='[team1]' />
                              <hierarchy name='[team2]' />
                              <hierarchy name='[winner]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Batting and their Venue Performance' captured-sheet='Batting and their Venue Performance' id='3'>
                    <capturedDeltas>
                      <worksheet name='is_Final'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:result_margin:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Kolkata Knight Riders&quot;</value>
                                <value>2</value>
                                <value>1406</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Bowlers Performance' captured-sheet='Bowlers Performance' id='4'>
                    <capturedDeltas>
                      <worksheet name='Extra runs and Over_by_Bowler '>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]'>
                          <groupfilter function='member' level='[yr:date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:extra_runs:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]</field>
                                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowling_team:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowler:nk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:bowling_team:nk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]</field>
                                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:extra_runs:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Bhuvneshwar Kumar&quot;</value>
                                <value>&quot;Pune Warriors India&quot;</value>
                                <value>&quot;legbyes&quot;</value>
                                <value>10</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Toss win by Winner'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]'>
                          <groupfilter function='member' level='[yr:date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='highest bowlers runs based on IPL winners'>
                        <filter class='categorical' column='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]'>
                          <groupfilter function='member' level='[yr:date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{778BF946-1752-4F21-9A6A-91E73F245AD6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Total_runs_by_batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1A94ADE9-696A-4011-A264-8D237F1B98D1}' />
    </window>
    <window class='worksheet' name='Maximum_Player_of_match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{114A9BF1-13FB-423F-B680-203C59EF7054}' />
    </window>
    <window class='worksheet' name='Maximum_dismissed_player'>
      <cards>
        <edge name='left'>
          <strip size='138'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:dismissal_kind:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{C56195D7-63FC-4E54-9F6F-64BFA7FDB4ED}' />
    </window>
    <window class='worksheet' name='is_Final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86F3D7B3-069D-4396-976E-A6333B17F7F1}' />
    </window>
    <window class='worksheet' name='Count of Venue'>
      <cards>
        <edge name='left'>
          <strip size='178'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[__tableau_internal_object_id__].[cnt:matches.csv_C4C070A94C08433B8A0423B61F6EF313:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4E563A4A-9328-4FC9-9BED-53CC24EF7CEA}' />
    </window>
    <window class='worksheet' name='Count of Umpire'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Set 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1F398CAF-9CD6-4600-91D3-89F9741DB5A8}' />
    </window>
    <window class='worksheet' name='way of dismissed kind'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D36BD5CF-79F2-409B-B231-ED0F876B1276}' />
    </window>
    <window class='worksheet' name='count Extra type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7CE7DA19-58C4-415E-AA3A-78A7CA03D025}' />
    </window>
    <window class='worksheet' name='Total runs by id'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</field>
                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>501223</value>
                <value>433</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{EBABEFCE-83E0-4E56-BB5B-F1F5958E427F}' />
    </window>
    <window class='worksheet' name='Total runs by team1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8C39C9B1-CB57-4A55-893E-91465B99FE78}' />
    </window>
    <window class='worksheet' name='Total runs by team2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AD55F976-AC31-4CE0-A5E8-D034FD5DD0BD}' />
    </window>
    <window class='worksheet' name='Winner_by id'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2AA46D99-5D6C-4D53-9292-34B01990B4EB}' />
    </window>
    <window class='worksheet' name='Total runs by Batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:batting_team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{838A3D26-8E3F-4EC4-8BB5-77FF2C39AB5E}' />
    </window>
    <window class='worksheet' name='Total runs in powerplay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AC506AF-04BD-4A14-86E1-11124A89187B}' />
    </window>
    <window class='worksheet' name='Toss decision and winner'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8C28FD61-CD0A-44A2-9F02-024A5BE1D5E4}' />
    </window>
    <window class='worksheet' name='Team playoff_qualifier_final_eliminator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{15BAACC9-4C26-447D-9126-ACCD4A8F261D}' />
    </window>
    <window class='worksheet' name='Team Wicket count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Umpire2 Set:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Umpire2 Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C0C16DE-92F0-424D-85AD-EE719A4FD69A}' />
    </window>
    <window class='worksheet' name='Winner by Venue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{33C3F96B-0130-47B5-A5A9-7FEEF8A3D6FC}' />
    </window>
    <window class='worksheet' name='Team  Toss Decision and Won'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[cnt:toss_winner:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{18BBBE56-635C-4B99-83C3-560D9C664FF1}' />
    </window>
    <window class='worksheet' name='Toss win by Winner'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{97714029-7456-4CEF-AB1D-9C19373ADF4B}' />
    </window>
    <window class='worksheet' name='highest bowlers runs based on IPL winners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' type='filter' />
            <card pane-specification-id='4' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{A7A2AF6A-50D3-4B3D-B959-6188FB4D462C}' />
    </window>
    <window class='worksheet' name='Extra runs and Over_by_Bowler '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:extras_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:date:qk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3927A2E2-A042-431C-A672-C8D2BE2BCEB0}' />
    </window>
    <window class='worksheet' name='Batting Team total runs_By_ Innings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:Inning (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C3E4102C-EE91-4BA0-93D0-34ACF93BF3D0}' />
    </window>
    <window class='worksheet' name='Toss Decision_Winner'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:toss_decision:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C66C97D8-F9DC-4DA2-A509-CB56009F9AD0}' />
    </window>
    <window class='worksheet' name='IPL winners of every year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</field>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]</field>
                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</field>
                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                  <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chennai Super Kings&quot;</value>
                <value>&quot;Mumbai Indians&quot;</value>
                <value>&quot;Chennai Super Kings&quot;</value>
                <value>1</value>
                <value>2010</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{EC8F7A30-78BB-4C26-AE61-C7F33DE38273}' />
    </window>
    <window class='worksheet' name='Winner result margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:result:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3535DEA9-7759-4EBC-8FA3-C80302C2E334}' />
    </window>
    <window class='worksheet' name='Batsman run in final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC50BB16-F1EB-4124-A537-74A3B07EA620}' />
    </window>
    <window class='worksheet' name='Home town_Winners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[io:Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D40D3BFE-E3F9-4FA4-90E7-3747E67116F5}' />
    </window>
    <window class='worksheet' name='Neutral Venue_Winner for Mumbai Indians'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[tyr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{26052D22-51A7-4357-A831-470602F93407}' />
    </window>
    <window class='worksheet' name='Surya kumar Records'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[tyr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB27F794-DC93-4F9F-ACC3-DFE0392BA194}' />
    </window>
    <window class='worksheet' name='Batsman run in eliminator1,Quarter,semifinal,final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B5798B37-F1AE-45D8-AB4F-9DC88B2A426C}' />
    </window>
    <window class='worksheet' name='Impact of winning by a player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:player_of_match:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{33BD6E8E-4DD1-4DD0-A1F1-94C3E7BC05CB}' />
    </window>
    <window class='worksheet' name='Top Batsman Strike rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='40'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]&#10;[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[:Measure Names]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Batsman (copy)_1550645667151286272:nk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Calculation_1503639346730278917:nk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:bowler:nk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:extra_runs:ok]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:extras_type:nk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:venue:nk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[qr:date:ok]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCA64DB8-03CB-402E-AF32-57EB1125288E}' />
    </window>
    <window class='worksheet' name='Trend for year total runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:team1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:Calculation_2528771212367962112:nk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[none:team1:nk]</field>
            <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3 (copy)].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DB0D65E-A13C-4036-836F-AEA98BDFC3D4}' />
    </window>
    <window class='dashboard' name='Final match Team Efficiency'>
      <viewpoints>
        <viewpoint name='Batsman run in final' />
        <viewpoint name='IPL winners of every year'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                      <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</field>
                      <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team1:nk]</field>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:team2:nk]</field>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:winner:nk]</field>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:is_final:qk]</field>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[yr:date:ok]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Chennai Super Kings&quot;</value>
                  <value>&quot;Mumbai Indians&quot;</value>
                  <value>&quot;Mumbai Indians&quot;</value>
                  <value>1</value>
                  <value>2013</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Winner result margin' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{90F161F8-3FEF-40A8-B665-5133C0417CF3}' />
    </window>
    <window class='dashboard' name='Match Efficiency between each match'>
      <viewpoints>
        <viewpoint name='Total runs by Batsman'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total runs by id'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[none:id (matches.csv):ok]</field>
                    <field>[federated.0rjbqjx1b0qyed187ohy617gcjz3].[sum:total_runs:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>829795</value>
                  <value>431</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Total runs by team1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total runs by team2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total runs in powerplay'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8156C47C-E635-4835-8C40-18450400CF08}' />
    </window>
    <window class='dashboard' name='Batting and their Venue Performance'>
      <viewpoints>
        <viewpoint name='Count of Venue' />
        <viewpoint name='Maximum_Player_of_match'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Maximum_dismissed_player'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Toss decision and winner'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total_runs_by_batsman' />
        <viewpoint name='is_Final'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='way of dismissed kind'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8A4391AC-EC6D-4E48-B495-2F5BCFFA00D0}' />
    </window>
    <window class='dashboard' name='Bowlers Performance'>
      <viewpoints>
        <viewpoint name='Extra runs and Over_by_Bowler '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Toss win by Winner' />
        <viewpoint name='highest bowlers runs based on IPL winners'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B02B89A6-779E-4FD2-8398-031563C3BC91}' />
    </window>
    <window class='dashboard' maximized='true' name='Story on IPL'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{EF54B741-3EFA-456F-982E-9BC042ABB187}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Batsman run in eliminator1,Quarter,semifinal,final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Batsman run in final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Batting Team total runs_By_ Innings' width='192'>
      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
      A2XrpERKfhC5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Batting and their Venue Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bowlers Performance' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Count of Umpire' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Count of Venue' width='192'>
      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
      21jH2o0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Extra runs and Over_by_Bowler ' width='192'>
      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
      EgChtf8DO0c3wAKnpaQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Final match Team Efficiency' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Home town_Winners' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='IPL winners of every year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Impact of winning by a player' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Match Efficiency between each match' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Maximum_Player_of_match' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Maximum_dismissed_player' width='192'>
      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
      A+C2bPHHlfdLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Neutral Venue_Winner for Mumbai Indians' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Story on IPL' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5gcV5mo/1Z1zpN7cg7KkuUg2cbZ4IiNMcYLXhuwFxvDsyzLLpt+7F7u
      ZffufXbhwu5yFyzABGN78drYGAS2wREH5TiaHHq6Z6anezrnVFW/P1oaaazRzEgeWWHqfR5p
      pqu/OqHmfHXO+b7vnCMoiqKgorJMEc90AVRUziSqAqgsa1QFUFnWqAqgsqyZrQCKxPNPPsoX
      Hv4cf/V3/8C2ff0AjLuGSBfORPGKePv38OSvXgfgnZee4aGHHuKhhz7HP/7LvzEdTQHwrW99
      88wVUOWcZZYC9Lz9W/b5Rb71H//JX/3pZxHlLAC/+Ol3mEqckfIBkEmE8XinAQj5Jrjtvj/j
      e9/7T26+pIn/8+0fADA4OHDmCqhyzjJLATQaDeHgNJF4koqaBi7ZuI53XnqGF986yP/4i4f4
      yv8svmWf/tG3+cz9D3D//Q/wyo5DAPyvL32ZnXv/wJ888ACvvvISX/3XYsNESvGnX/wK8kwu
      Ck9891/4zAN/wv0PfJY39xUb7pc+/wD/+D++ysMPPsDDf/1PLGSbFQSRjVdeQ2LSs0SPQmU5
      oj32Q9fmG7k9nOLv/+LzaBx1fPkv/pJLP3QnN2z7Ax/+4rdpKYHo+EHeGlV49NEfIqWjfOHL
      /4OrL/k2kOQPu8f43vd/gFZU+O2zXyCSvR/f3tdZddn1M5o2PbiL/WEbj/7wB+STQf70b/6Z
      D/zHN0Bj4M/+5h+wmfR89U+/SBywn6DQo4N97DIk2f36Vjo3XXY6n4/KeY529keBq2+6k6tv
      uhP3wB7+5dvf4Tvf+NosCd/4BB2rViEAWpODaoNAcXRk5jMP/DFaoZjO7TdcxtaXtxPZv40P
      P/x3M/dPTkzQdfh+vaWcEo1MDkBnxGbSA6DXaI/pMY7HNdSLPhek9aKbuO7KTe/tCagsa2bP
      AfZuY2/PEJIsIxXyaHXFBmk2W3C7PeRyOZpWrGbvGy8SiqeZGNqPVzFiA0BAEI6mdekHb2Pn
      755iKmemscQwc7191Rq2v/IbIsksrt6dJLR29CdZ6GtuuoMHH/wsH7xqE6KwsLyKyomY1QOU
      l5fx0589wSNjE9S2dPHXf/mnANx2171889+/we+dXXz9rz7Pn336Nv7x//sKekcVf/s3X0EA
      mtrbZiUmGhysq7dQsvGGWRlaqtr53N3X87W/+TLmsjr+5q//HID2tvYZmXenZbSW0lBTvFLm
      rAO75biKOC3w0EMPAfDJh77MVRu7TvWZqCwjhNMTCySxf9d2fvzY03z9G9/EqlNf0ypnJ6fJ
      EabQ293L5/78K2rjVzmrOU09gIrKuYEaCqGyrFEVQGVZoyqAyrJmxtoYi8VOWyYajQYASZJO
      Wx4q7w/xePxMF2FJmVGAQuH0h3u+H3monF7S6fSZLsKSog6BVJY1qgKoLGtmFGDC7cLtdpPK
      ZEilMnMKe9zuJcl0eKCPMdcwgfDRRQbJ4CTRzNGf2XSKwnwRcSckhccdAGBychLI43F7j5dK
      pWZ9Lsoe/blYglOTjLrdjLon5vhWoufgQbKnVpGzmv3bt7F9+zb2Huw9oUzGe4hD3rnb0hES
      3h5eeH07b7y9Y87vf/fiVkKx0zfsmpkDZDNZtEYTgqAQCEQYjfoREWnu6sLv9VJQBPRL1F9k
      s1lEnRZZlpma9BCKpXFo0oRCMg6CREMyToOCtSLFvpEwFp1Aud1IMishI9DW3Mj01CS+UIz6
      UhNTGQGNLGPSKcgUkCmlkE3jdrux2CwEAz4iiSg15TZiyRw6oxmkLFMTKfKCga72FgrZDAUp
      RyYnMzo0QKFQoLzcgTuYw6iRsRj0NDRWMzIyST6TQBJ1rFzRSS4nUd/QgGtoCNfIIFK+QHlF
      Kd0jftoaykllC/gnPRRkBY3ORNg3RmVdGyGfh4IMZaU2RH0pWiVJKJbGatQiiFoKigiFFKLB
      ipBPUSgUcFS3UG4zLPyA3wcSsQSi1UyhILH9zdeQZImy8jJS2hoO7fw9l67twuQwgS7NC79+
      FdFixaFPE89ZMOnyaPQOLr7kAgqZOF3rL2Fs/2vs37WNZCZNRX0bO15+mTWbLmFiOkxZ/0F6
      CxJavZnoZB+OhrVEx4ZI5fNUNzWg1Vso0cv0jk6xsamEnpiATpawaXLkRAtWbYF4Jkups4WV
      bfWz6jHTpHVGM42NjZgMRZ2wOcqorXAQDoXJKUs7+bE5yqivqSGRCBIOJUil09hsVmrq6ig5
      /PNIwaqq67CaDKRzEi3NTeg0xdCKcDhEPpWmgEBNfSMGvYikiDQ21KEBtAYTVZVVOGxmyiuc
      OGxmYrE4Gq0GzeEQUq3BTFd7CwC11aUc3N9HVW0tiUQCg8FAIV/AWVOP2XBMvKqSJ5HIohc1
      SABKAY/HQ31jM8lEAp3RgJwv0NjSTk11Fc6qaiRJoaW5GSmXorSimlpnOfbScsrKy2hsakTJ
      J2aeAxodDY2NaAUFQaOnqb5YHq3BAIX8kv0N3itmezmbLr6IRDwEWhOXXrqRSMpEYuR1Ols7
      6Y3IlBsEyISZihUQNRr0ZgfXX3M5qzo7SIW9xIsLDtm/ewer1l7IlN+PRmdGUDKs3nAJG9as
      ZuXq1ciyzKWXXoqcT1FZ38ymDauorG6go6WVDRdfgiBncHtcJMMR8oisueAibGYtMgYuvWQj
      U/5pNBo9cLwVUvO1r33ta1Bs4Eaj8fBlAaNRj8FgRG82kU6msFqt2GzWY2QWjygWm7MsF4cC
      iWiYaDxJRVUtSiGN3mjGWV2Lb3KSippa/JOTOEod6I1GNBodBp2Iw2JkfMpPNi9RXlZKNptG
      ozdSVlqCTm9EK4BRp2E6GMHqKMFk1JHPpiigwWDQYzQYqCwvJRpPYbXaMRkNGI3GmfqIOhO5
      XIaq8lL0Og3ZvExJSQk6vQGDVsCgF/FPh7DYy7FZdSiijhKHHUEQqXQ60Ws1GHQ6MrnCzH1G
      nQgIlNrNeMa9VDhrMei0M3kaDUaMRgOgBSWH3mimtMRx9HudBn84hrO8jHQ2j72kFL1Wc9LP
      fyk58iJMx4IMusZw1jZTbtdxqH+CjRetI5kqcMFFa8hGU1Q7KxAt1Ti0CbRGG7XOSmw2OwHf
      FBlZR3NjLSJQ17qKCpuBMruFYCRBTW09FpMJm60Y9dvWUM3O3ftobFuBzWLEZisulbLarVhs
      tuLLUpYxWEtobKjDaLGhF6HMbqR7wMWalR0Ew1Gqa+qwmWe335lYoFAodNoemlZb7FXeixk0
      GYsQCIUpd9ZjNemWqmgqJ8npbCdnAu3CImcHFnsJFnvJmS6GynnGIqa1EuFw9JjPBfz+4Myn
      cHCa/v5+pqaDx9+qonKWM9MDuF0jFPI5ZK0Jo8GI1SASDIUpd1bQ3z/M6tWd+HxByitLmRz3
      EI3H6WhrprS8klA0TnVl+Zmsh4rKKXF0CKTR0VBqIkAFhaiXlKQgFJKklXqqqpykQxFqW1sx
      i3kSFU4U4eyxSKionCozQyCDwYCg1aPXChiMRmRZRtQZ0Wt1KIUU5rISJkdGiMRSGIx6jIaj
      s2nTYauF3+8jGvCTUWPeVM4RzhkrkMrZwflmBVJjgVSWNaoCqCxrZibBR4Ypp4MjC2JUzn1M
      JtOZLsKSou4KcR6QSqXo7+8/7xarvB+cM55glRPj8XgYHx8/08U4J1EV4DygoaHhTBfhnEUd
      Aqksa1QrkMqyRlUAlWWNqgAqyxpVAVSWNaoCqCxrVAVQWdaoCqCyrFEVQGVZoyqAyrJGVQCV
      ZY2qACrLGlUBVJY1qgKoLGtUBVBZ1qgKoLKsURVAZVmjKoDKskZVAJVljaoAKssaVQFUljWq
      Aqgsa1QFUFnWqAqgsqxRFUBlWaMqgMqyRlUAlbnJTPHY0y/PurR/+9sk5jzjJMLjj209qeQP
      vvMS3sTsa48/9vjJlfEYnn7scTKncN/MQdkqKrMoJHh7Rw+jfXvxBNO0N9cTC4YprXWiVSRe
      feFXvPLmdiSNgTqnje1v7sM10s3wVIyu1kby6RjPPv0UQ94onW1NJIJefv7zpxh0+2mudfC9
      7z1C38gEiUyB9uZ6APbt2oZrZJDuoUk6O9sQBYV3Xvktv3tjB3XNrUjRScZjCmU2E88//0s6
      ulYQ97mYjIN3ZJDO9esQ82mef/Zpuoe8dHa2EfQMEM6J/P5Xz9PQtZI3fvMsr72zm/KaBhxW
      k9oDqJwYr3eKG27/OKH+A8SBwQMHyQAvP//fmBrW8Ol7P8GBPTsBmPR6ufaWj5L3HCKQg2ef
      eYYrb7qD1ZUFXny7h+eefZabP/bHXHXxGkRLJTdds5mP3/cgN161aSa/dCrFBz50Gxc0GXn2
      t2+z//VfE7O08Mk7b+HJJ57Aarfw5utvkou4OLh7HwO+FNvffgez3TaTxq+ffYYLrryJy1dX
      8vyLbzPtGeSHP/k5m66/kdTIDnyaOu79xJ3oD7f8ORVg2j3Ali1b+F9f/zpbtmzhhde3L/nD
      PXF3WuStrY8xGlk4nVd++xvScvH3//7Rv9M3EQPg9d+9REaGt996ewlKuzzpWLkWh8WAw2zh
      2HMPAxnYvKYNjVaPXlc8/KS9aw2lNhMOm5mCDCND/Tz31BO8vLOfTCzEzTffxC8e/yFPPP08
      mdzcf3hrSSXldjNt6z9ANjRCjyfGdZtWYrSW0FhiI2eqRCNFObCnh3s//wB9e/YQyIDTcvQA
      ltGRIV547il+9fJOcpliW7jx9o9RV+Ggsv1CLPEhvvvI9xkenwZOsD16ZWMnDz7YyWOPP869
      99wDgJRL8avnniOrtXP7bbdgIMMvf/Es0ZzILR++DYuY5tlnn0c0l3HbbR/GrBeJ+VxMSw7a
      akt5/vlfcuttt5PwuQjKJZiMVrRaGOnZTzSXZ8+u/Vx90+201VXMlGPftld5dWqCW27/CHLY
      Td7WSGOlFVfffmyNqyk3a6m2y+wf9LO5w46is3Joz25W1F2DxzfNVSJYrVYADuzfQzzgY2Ai
      zJ13fRwp7GbQG6V3/x7WbLqaC1e3MT0+zK9fepUNl17HBStbOHBgP84SE7uHAtx87WWn2IzO
      P5rLjTzx7G+ptgpMR+ceedfVN3HdHX9Eia6AN5wmFIty3/0PcuiN5xgYj2AwGPH7/dRbStHp
      dAAU8lkKkszBt7ZS1rSeenmMl7f3ctXqGsbCMYxAmVHkUDDPRc56dsVfRtBVzMq3tq6eC6+7
      g7oSHWPeMIWp7pnTj8KBaS66+mZutAg8+dyLXH5B1+KHQE8/+TgXXHUT11zUwX89/Tz7//AC
      js7LuPsjN4Is8cJzz3LZzR/jxqsuRpKLO67P12Ud6U5He3YzmdTxqfs+ySsv/WZWnmW1bfzR
      R2/i508+QaWzkhd/+1sAXn9nL6XmYqW6LriYwf27mR4+QNXa65EzASjEEXTFbvHggYMAvP3a
      7ylvXcdHr1rF1jd2E/GOsrtvkk/c9yn2vPUKSGl+sfUN7rnv0wxue4nplMSO11/glZ2DfPCq
      zYt9TOcPWivrVrUA0LFuLcZjfm66/iNcvq6VlhXrqbDpACNr13UA0LJqHVYtfPwTn+Ctl37J
      M1tfxm53YDXp+PnjP2FKqOHijgo2Xnkz7l0v8Idd3TNZblzbxWM/fpRpoZqbrljLuqtuwZ4c
      5YlntvLJwy/iyy6/lMb6RgDam5q55LLii2nVurVogY9+/BMceOslnnxmKxa7ncqGDmpKisf4
      2ux29r39Mv/17AvcfvvtxWou9nnkNWaanKVAKYY397Bm86089d9P8chrca677W6uv/lmnnrm
      ceLpHHd/6rPYjCbEd3VZe/bsIf2uLgt0XHjherR6MOpnnyXW2NiI2Q6ldjNaSyUWKUos5kdn
      r57RXI3ZiZKZZs+hFJffegmvDG5ntHcfDas2zkrLVlHDipY6iOQoFCYBWHfBhei1WswWI/mQ
      h54RFz9+9FHSsTDToQQ6exV/dOctCIt9SOcTWivrVxV7z87162b97N/3Dq/tOEAhk2L15hsB
      I+vWdwLQumr94ftLuOsT9x5Nr7SDT32mY+ajoLdw1yfvm5Xl2osvZ+3Flx9zReDSa2/m0mOu
      lNS0cE1N8fd1m66aub7qcNkwWPjIXZ845o7Smd90Jhu33nHX7GrO8whmoZdSjPnCmLI+MqKZ
      6cA0H7ztbgx5P79+/SDm9Y3cfd/9+A+9wcGBcWouKVZ2oS5rPrKZDBH/NPHDg/wPXX0h//uf
      vsPDf/13s+QsWg2BPFi1sL69gh9tPchf/OUVi84HQFdaS2ttNfd95gHCkyNobQa0Wu3ybPwL
      0LXhUro2XLqw4DnAgmbQaqcTgBWrVvL6i79maCrJx+74MHpR5uUXt9IzGuQjH7kJjZRm6/PP
      E5RLuOnqixAPt5zKUitp2UBLQw35RJSWNRdRaiueNFhe7UQLlFZWz8zKj+SnM1nZ/YeX6HVN
      c9ddd2LQaTCXVtPX38OHrpo9Hi+16pAN5TTWVuEoryAUTrJhVfvM987qYppOZ3XxgtaIs9yB
      0VaKw6IvflfTSHONg2effY5wRsOale1ohGPuUTkvOXeOSMrH2fK9H7Dqig/zgQ3tC8urqCyC
      c0cBVN53Duw/wLr16+jZ/RZv7j6EVm/iuhtupqmmnD179rBx48aFEwHCkyN4M0ZWtdae5hKf
      PKojTOWEHLGg9ezu4+MPPsgf/9EdPPPk4xSAPXv3vEtaweudAmB60k00mQNgamoKW2klznIH
      ci6JPxSlv+cgU4Gik8c35SPkn+Rg7yBH3sTTXg+9g6MogJxLMh2OMzXuIprMEQlMsWfvfpKZ
      /JLUUVUAlUWjN1opNxuZ240l8MILRTP1Ky/9kpdf34Gc9vPym/tITA2wrXuMXGiM//PN7+CL
      JPnxT34KwNOPbeG1bfuYOPQmv985xMiBt9n6xm58rkM8s/V1cqEx/vOR7/P6joOQC/H9nzyN
      lE+z90D3nKU4WdRzgoF4PI7NZltY8BzmvdUxxU+3bMGgKHRdsBnjCaQqzDrCmRSGsg6ktI/e
      3VHWbroCCoMzMpddeyNXXnYhY6PDAJRUt/LR224mM9XDrw9FeXN4F1mMDERhMpTh1guvx9my
      mrs/egMoeZw2ge07dnPlhz58inWZjaoAKovAzH0PPkDJAlKbL+jkuSefYu2VtzG1/1X2uGN8
      8gN24qOLz6nEUcoNN38cp81AJpOByAgVFUXTuVyQufv+h9FrFH7wgx+zrvOBU6/SYVQFUDkh
      VYdN0pU11cc1lFzMx5YtWzCV1nDvXcW3cWXHBvxPv8b61jIalFa27plCA2iNVsrsRkQ9VJYW
      nZ3OqiOm6SoARL2FylINl266hZ/87AfIopaG9nVcv6F25h5FyvD4Yz8mLyusuOBylgLVCoQ6
      BFrOqJNglWXNnEOgbDZLLpcjEvBjKq3EoJGZmgpRXV15woSCwSDl5eWzrh156+QzCWSdFYPm
      3fcE0OsNZ/zNlM1mF12GQqEwE134fsrNJzs1NUV3dzdNTU10dHScVJrLnTmfksFgwGAw4HUP
      k5INVBqzuINRykodlFeU4PeHiYZ85CTQaQQq61qZHHeRzst0NDoZdnkoqajGYCg27mDQRb6i
      hsDYfjDY6WqppX9ghHgmS2tjAwatwKh7nLKqWpJBL6mcTHtHK8ODI5RX11JV5lhUZY7t5gcG
      B+js6Jz1/dTIKI7WFkzvum84FOBfd71z8k9vHq5pbuPGFauWNM0TUV1dTXW1GrJxKsz7mhC0
      FpBSBJLgtOkIBUOUV9iY9gfRGvToNAqdHc0MDkxS4aylRJPBn5RQFAHPmBu71TSrVxB1RhQ5
      z+iIi5bOFbhHBggFg1gMThSK99jMetqcRjy+CIl0Huc8b7Le3l70pBFsjWTjAbQaEd+Em7yi
      Q9HCuGsQg70c1+AwgsGINh5iShEwZmIoopGOlZ2qFeAcJJvNYjAYliStBecAVp1A7kgzkbMM
      DAyRl4+XC09P4Q6kyEanUQQBQTg+jlIQiv/ZLUYG+vuJJtIA+P0+QEA4HHspIIBGj82qxzvp
      PWHZNIIApjJy/l6MpcV1pQVFZOXKTsR8hnFfmBKjTCQto9VoKC2toK21mYaGenKpyEyUqcq5
      RS6XW7K0zmkrUCYaJJAVKcRDNLS1EQkG0QoSXn+U0soyqkqseKfj5BJBcoKBltoyBtwBnCUG
      pkMJ2ru60InQPzHOaxPuReWpKMqcyv1uNjhr2NTUsqDcUswBFiN3PlmBlrIucyrAkUnwciGV
      SmE2mxclK0kSGo3mfZd7r2mmUimch+365zpLqQDzToKP5WQayblGwbMTnvjiomQX11Tfm5ym
      /mLMd/3ouOunw7K03Jn3KXlGB4mlC1RV1zHlGaC0qpH66grGXGPUNTWTjoUJxTM0VJcxHYqi
      0ZuwGUU83gCtLc0Epv1UVVXRc3Afos5ATX0zOlFAUQpoBJFgaJrSyjq0cgZ/OEVtpZ1YMoNG
      b8KQ9jJJNWF3H7V1tTirqo4r356d76C3VWLQSDSVGRjNGfH1ujDYDVTaDWRlgabWLsz6c8/d
      Icsyb775JpFIhCuuuILS0tKFb1pCUqkUkiQtLHgGSKVSS5bWvAoQTWVZs3oNAGMjCvFoiOHo
      NFUNLfT3D5JJxqlxmAmEcvhSFnThSUy1TnKJaXqH9OiUJFVVVVgtZiLJHAaDgGd0imw+jlWr
      wdHYxvBgP7JUoL7MhHs8gisgccWFK5DSsG/7W1x1zVVMj4/MqQCWkgq6OtoZHOyfCaWtqWsC
      MUZ9fS1Dw0NEoinMldYle2DvF6IocuWVV/KrX/0Kh2NxZuCl5Gzv7U/rEOgIGrlAMpNHVCQc
      DjsyIoV0guGRUSwWGzqNgEGnkJPBbneQC0YYcblpbm5mfDI5Y2OylVRSXV1gcMSLRpGIxxJY
      y8ow6EQEQSQeDjAllFNqM9Lc2oZGFJCAdRdeyOhAP1azDqQs0bQCUnamQZSXlQFgNRlw+WKU
      N1Qg6BQQdKRTaUSNEYf93Vb/4xEMNjT1Fy/qgS12Evxe5MTKLgBisRhWqxVRPPd6sDNBbs9j
      oMiIZS2IJY0IjnoEcf6h4PxWIEVmbHSUsup6NIe3RjKbDIyOjFJV14Qg59GJIAsiiqhHzmcQ
      lQLBeJpSuwOQMZvNxCNB/JEUrU0NTE26EQ020kEfGa2O1qYWlFyScV+Y5voq8ugx6kTkfIYc
      eqRMEkWjwWrQHKcAS8XJTKreT0/wtm3buOiii2a+V61ARU5UFznmRfL3IIdHkUOjKHEvKAqC
      0Y5Y2oxY2oJY3lZUDmOxDZ0xM2gmlUJvNi9pMNKpeoL3jY3yZO/SLLCYj9aych66ZPaCftUM
      egLkPP0Dw6A10NFUQ9/gMBXOeqrKHSddFzkVRA6PoUTcSIEB5IgbcglQlDPnCDUuwRhT9QSf
      xwhaOrs62btnL/2DCdq61jDYe4iq8pPv/UVzOaK5HOo2ojvmuqLI53Y0qOoJPncZHx8HYGJy
      cm4BQcDvHUdAJCOL6DQCCAKyLCPLMoVC4T3/kyT53H4BNtZUEsiKaCSJhmorEV05WkGir2+Q
      UmcdXV1FT3BHfQk5wUBtbRkDAyM4SwzozQ6shqL+m7Q6WsvKF8ityHuZ3NbY7CdfyfOQKVc/
      //tf/51LLr6YYW+Ir//tl4+TKWSThGIpNDo9rQ1ODnZ3Y3eUI4oioigumZ9D9QSjeoLPBD2H
      DlBAR1VZKdU1JxfJekY8wQtxXCOS86RyYDbqjpODs8vO/H55gufy8L5fk+CzjYO7tpOz15IN
      T/En97/3tb2nyrxPqXvfHnRGEwVBT0ejE28wTk25DUVvoZBJIioS3kCMluYGxifG6ezoZLiv
      mxw6aiotjIynqauroNxmxOXx0tzawsT4OIoAnR2dTLhdlNc0IGXi+ENxmpsaCE97SUla6qpK
      cY1N0NTcRDoZI52TKaRj6K1llDmKjq1z1RP89ttvYzAYuPDCC890Uc4YG9ev5ddv7qa6tvmU
      03hkx/xnP1xY18BFdQ3zyizcMgQBnVZL3+AIFRaFsclphobGGBtzk8/nSUyPMjQZnxFP52Hl
      ii5KbCYkNISnfRQKeaRcgu7eoRk5n2sAjb2CoYF+BgaGKNdlcE1MMhWDRCRIf28vVc4y+gdH
      2bVjO2aLlpHRKXTao0W2lFSwZkVxm8RjPcFlDjP1DQ0ohQyR6NK5zZeK/fv3U1dXd6aLcUZJ
      ZPLc9fG7MWhO3Qo/EgrO+y+cXvhvP28PYDDZMBsgrzORSUZRAEFnRZN2I5qduNwTNDc3MJnM
      zWiSVMiRyxeQMzkcDgdCLsjwiIum5mZGxyc5onOKVGBkeJgSqxWrTYvRoKMQzyNqzWTiGcRC
      hpFRNxZbGTUNTZh1Blasaqevf4CLN24Azj1P8BEP78MPP8wzzzzDnXfeuag8zzfGRwfJyAL/
      9Ldf4YZPfPZ9yfP53m688dhx1+dVgLqGOsxmM5FIhNqyVrzBOO2NlfR3e2lsqkdKWoin8zRW
      20EuNrR169YyOuqipqGO+motyCZ0ooI3GKetqXEmbbPZRGFsFGtZNXoNaHUiDVYR3+QE0bzC
      JRsvZGR0jNqaKuS8A0QtmWSMzs6umTQqDq82q6lvpubIRdvMfzjKj48fmgtN1Yo5oy/n4r2O
      w2VZ5tVXX8VuX74WIaujBMN0kC9/9WuEgsG5heQsvX0jZHIFOltqGPJMYbOX0dp4avuLeuMx
      RkLH5zXvX/LIRLWkpLglUlO9FeQ8JVX1GDWAvRTLzN+xONkVNDpa24/dvbl4vbHOclz69U2t
      sz4bFRlRUOhc0YWg0dF2JB1dsRy1Dc3zFfc9rQl+8q3X5k17Ph685FIMqQwDAwPU1dXR1dV1
      QllRFLnuuutOOa/zgZKySroPPMNH7ruY3734GzZdNMcmu6KBFSs62LVzL8PjU6xds4aeQ4eQ
      5eoZP8BCHCt3ooCHkzcViDqcVWXz5Dq39WdRCCINza0Lyx2mt6cHvZBBsNWTjcUA0JkAAB2e
      SURBVEfRahT8k25ysg5ZydDf10NZZRWjwy40BiOaWJApRcCUChJIimzafMGSOUJqampwu934
      /f55FeBcY2Swl0Q0QnlDCx73FDqdhs7mGvYdGuGKyy/BMzpELBLE0bSW+rLFW/buuON2fv3f
      T7DhkqvnFlAkdu/czZoLLsIz1EteUkBRTsoPcKzciYat806Cu/ftob+/j/0He0lEg7g8XpCy
      +Hw+/KEoKBKukWFiyTThgI+JqWkoxBifihENTeMPRsimUkQiQTK5Aq5RF9IShh4ZtSIFQxlx
      dzeOuiYAsnmZ1pZGRJ0RnSCj1UAoHEdRFCoqKmior6euuZMqU45wauk8waIosnHjRqanp5cs
      zbOB8spq9GYrUjhA+9oNGHUCtpIKqiuK6xNKSksoKCIm3WINxLBn717GXKOIWj0ez9icMko+
      hWi04B510dLZznB/D1W1jXPKvhcWVCOpkEejt5LPF5ge7UavXclEVMCmeIn6JepaOhlzjVJu
      N9N/oJ/yazaAnGFsIolZzBATdCQNJkyTk9Q2t9LfP8yqFUtzwEVjcxOJHEgldkrtetLaegw6
      kbEJP4119VjMJmKxOJdsXEFW0VNdWYJrbILqCge6sgYqzUX9LzWZub69c4HcisiyfFx4cqnJ
      zPDwMB6Ph9WrVy9J3c4OFHZse5vGlnZKnGX0du9Dp9MSCfjwjHswO0rIxAIYjDqS8RTltsX5
      jmrLLLz6dh8ajUhJ6dyjCUFvY+P6NTOfV606Pc91QStQe2cbe/cdwJ2J0dzgJJmTii7pWApZ
      khCVArmCjNcfpLbMMcfW2Vra2ppx793B8IgLq3WhLVYXj0ZvwqEHDo/qj8xZWpuPvimKk82j
      E86Ww981W48GVZXIClfkZq9+Es1m9M3Nx+V5osltWXs77e1Lo9hnDwIfvPGWmU+bLjq6Mdq1
      1x32Ks+zWdqJMFvtOOwOFGTisUUcBn0amVcBKsvtDAwO0bVyFVI6SjovU213IAs6cNQhKAXG
      PR60Wh3VlQ4Kih6T1k59rZ18KkJW0eEw6dECK9dvZHTERXXN0rnjX3/lJZo61mDWa6mqKsfl
      8tDQ3FQMkjsJcmNjRL/1b7OuGVatxPkPf79kZVU5iixLIIAgiBg0+jNalnkVoKTCSUnF4QZr
      rGS24c5MLp0AQUtXRwta8WijMxuL8rMQte+yDr13KqpqaG6oZbB/kEjQt+RDLJXTQyYZJxQO
      IQgippITnTbw/vCejCB6k5X29jO53lahIBUnsoVsesmHWCqnB2dTF3/cvOJMFwM4x88HWNHZ
      wYTXT11DHSZjyykPsbSVlTg+Ntsrq6lc/HnGKieHIAgMHNyHrBEYnIzx4evnOtNZZvjQLvKW
      Nir1CTyhOBqNgbUrO+aQPXXm3R36XKDUYUGSJBLJNJVOJ1IuTTx3ciHOUb2eyMVzOGPGjj/a
      RJEVBHERoRBzyJm0Omrts1c0vZ/h0GfTksht27fjTxawWvTAXAog0tbRxsAkeMNxNqxZQ/eh
      Q7MWxCzEKTvCjoRDH2lE8Xgx2G2hByjl0mRkLUYxT1bRouRlLFYj01MTRJJ5WlvnnqBGo9FZ
      C92DgSDlFQsvUEkmkwhyHtHkQMqmSCaTlJfacY37KBSyOKsqSCSz5DMxFL0N9/5dUNvEyppy
      JvwRWpobEDjsCX6/1gTXnZk1wWcbH/+ju/FFs+iEhfceKjFqCcSSSNLSO8LmTWXCM4HNJKBY
      nOjJMel2EU+lqG5sJxGYIBLP0dJUzZjHS21DMw6LnsH9h9BpYMWaVvoGAqxe20w4nqS1sY6e
      vj5qq2qQpCx6EXyhKPaSCjRKgaw2hsszQUV1I6ODfUz5K1ixsgvNPC9bt9uNQSsja2MUsjk0
      osy0b4r2jk6GRwbYs3c/K1e0MexLoVEClJRUUNHWzOD+PZQ7G5BZfHz/UrJ161aqq6uXbTj0
      lKufF147vB29qZRP33378UJynsHRAApQ2d7F9LiLrpUrl7ws8ypANh1nOiJz2aZ2BgcGUBDo
      WtHG4MAokqTHohOJJeLkZbmoaYIGhxFiWGY13GQ0xNCoREVFGaFgpLgxls5Ic0cn7sEBctkc
      VlMdiiAy5h7DUVZFc7WJ4ckYnXUnDhozagRyGgsZ7xCVaz5Acso1o+mCzkiJJkcml8c7PkaF
      s4ISg0A2W6C5tQPvSA9ae/mMM+z9JB6PU1NTs7DgeUp1cxef/vQC4SKijo5jQkrqF7HR8Kmw
      oCNsXZOd3mH3MYICoCMZ9zOdyrOmejX6SBzv1BQttSUkZDMWksQyR8doFkfZ4cC0AtsHdxDL
      5umoq+XYXsk/7UMQRARBIB4N0pMQaVo1fyM5WzzBi5UrNZlRFIU777yTF154YdEnraucPuZV
      gI6u4ox75bu2pezobMU1XKAgJHDYSym1HxVYu+qoDX712qJJ8mhUppZNl80eA7e1NLJjXw+r
      167hZFkqT3CpUOAaw/Gx4nMhyxKiOHvgpKnsQjDO7qlONA5XFIV33nln2S+IOVs45ZlSc1sn
      zW3vvQCizsjmuSwwiyCVSpFKJjFbLBh1xe0zUpEweUFHVamZUfckzS2znXRzIU33k35xcWuC
      58L0sR+hbVjcghpBELjyyitPOS+VpeXsNhUsQN+hfdS2rGZiwkNTmQFPzkh8PILVppAM5jGU
      VCFJyoIKoLJ8ObtWi58klpJKqiscSJJM7LCp1mF3oNGI1DS0os0GGffHF0hFZTlzTvcADYfH
      0XXOShKZPA1lZeBQAAc6EVKKlZbahbfSE+216Dd/flF5zjW5Fe2ntkzvbOZcOB9gk3N+I0ml
      Tk8sFkMQBDrtJVTqjg+8O283xjoZT3AwGiUi5Rclu1hPsENvoMK6sOd1uW6M9V44mY2xFrLa
      LdoTfCRDKRUhjg0pHaa8fHa8TCKZxGqZvfZ3rjRAIh7PYrMdbqC5OIGsgQqbnkwiic5qQQPE
      IwG8/jANzS2Y9McX9Wz2BF/T3EZLzcI9w3L1BJ8ufJ4xHLVNxTXrMG/j93nGFu8Jjo6NkCqI
      NJdABDP5UJBcLo9Jr8HrC1BbV8c727ZxyebLiU6PIxjsNDfUMj4xTlWJhXBWR9A3WTwEe0Un
      uVwOvzdIOByhrrqCAwMjtNRWEB0bgtomNrQ1MzUdpKO9nf0HD7Fh/brjyncueII9Hg979uzh
      9tvn8HaqLDnOhqaTkp13EpxNxxnxRqgp1xFPQrkmje/wOlr3wEHymmIgmihmmfSnqaurp8xu
      QpLA4y4eOyrnMxzod9NUV0VeFmhzGpkMpwkFI4SiSepK9cRzUNfYSj6dpKSkgva2ZqAY4rxr
      9x5KyudedWTUCOQ1FpLeIeyH14vO8gRb9DOe4ExBQatlxhOc8I0QWsI1wXOhKAqHDh1atm/j
      M4HPM0ZmkVOXBXuAo55gH5lUAFdCoL3FRBhobF/JtGeEhAG0Bg2CrJBLxQgFpvBF0giHux5R
      Z+TSC5s5cGgAi56Zw7ABcukEI5EYlc12EIoHZVsdRgb7R7igqxWtwcTapka6R6bQKwWczhIm
      wxINzqKD7Wz2BDfZS+jr6yOVSjEwMMAHP/hB9Pozu/rpfCbon2TYNYEoipTVLa4XcDY0nb+T
      4JMhm81SUbG4+P9TmYgGg0HKy+eObn2/JsHn3Akx8zBXXQb6+xAUGVEGZ9cqrPM8Jq/HRSyV
      BcSl2x16ubCYbRHfLXeixn8y6Z1q3suFjo5OUCS80+F5G386Gcc75aOirhG9eAIFUDkxiz2x
      canlTlea5wujg33k0QAi+aoqdCd4BFqdnrrGZsxmM9lU+tz2BC8lilxgdMSFNM++XeGAj0lf
      YFHpJaIhUtmFZmMKHtcIifTCw82Q34svEJ4/NblANJYAIDA1QSSRXlRZz3Vi4QCBUJgCAuJC
      Phq5wKFDh/B6vbhGRlQFOELfoUNUVVfQ0zswt4CSJyfpiHs9JBcyHikSQwd34gnN3wBHB3px
      OOvRiQvsliclcU8lCHjGmE9VvJOTeCYnycWm8CVFXEP9CxT0/MBeWsGqlV0IskxBEU749gfQ
      6Axs2LCB1tZWNlx8kaoAR5AELRazFVE+gUdY0CHnouSNdiwLPDXX4ABN7Qsv3g5FY0y5h+kf
      nnt7wKPoyCQDxDI55tOV2vpGdBqBRDhAaVU1Wt3yGeF6/SFWrlxBiVggOk/HK+VzICi43W7c
      bo+qAEewm7R0d3djsJ1gWxUpyd6Dg+gEmfwCPYDRYmZyfJzAAvuEOisrKEgK2gUsO3Iuiawx
      oqVAZp614B7XMOMeD6LNibt3D5ncGTkC+n0nFg4gSQUGBgaJSBqs87RqnbE49i+zGQmE42fu
      oOyzifPJRHgizqc6zlUX93A/xtJaqsoWrqN7ZIDJUJJax9Ie1K6icsYoKSsnMOVhcHBowR66
      qsqJxagjnpNUBVA5P4hFo0xPT+Of8rGQjWJswotBp6PUqFMVQOX8QBa0tDbWotdq5zVlA9TX
      1VNfW0Uwo/YAp4Yi03/oIIFIYkHRKZ/vuGuFTIwXXnkTpCxT02FiIR/heIYpn4+e3XvInERR
      jsQaDQwMzCwUWW7kMwnSmQypnIy9rAzdAq4Ai9WK2VZKrUX1BJ8SLz33JHJJIxpLFFf3O3ji
      Oj6wuhbKWpkc6UHJJentHeSiTZv49r//B/d99otsWt/B7371NLrKTpKDr+NSmkEU+P2LL1Hh
      ANlYTzTgZv2q1WSm3fzmD7twVDfjNMv09vZy0dW3EhjcSVB2sKrWhss7ydpN1yOn0wwMDFBf
      X3+mH8sZQ2sw09bWxtDgIO0dbfNuppbPJBgZmwCgkMmqCnAq+BIS995xBRQi/PD1GCvKc/xh
      V4AVlzVy4OBBdCjccMU6XhtJsvnSS9m0vpOIay8xUxu5Q7tZv2E11abVIOgRRQlFUwL5IKKo
      p+fAQcy6ZiwN65jseZuQQcNNN1zBs79/jfGhUfRIiOsbMdRfRKkRgslirFFnZ+eiV8CdbxSy
      KUbGJpicnEQQtbR2dJywF9AZrbPOcFOHQKfA2tZq/u07/8m27glyoWHePDRBe0MFz//8pwRi
      GXRGE2ajHllRSAXG2X5gEGtFPcO7f89ESubYHfEdugJpjYV8wIWl5mhIttViRRQ1iDojVrMR
      RDMlpgKOqlo0aOnqKu5JYzKZll3jf3ek65FGfe1119HV1TGvJ/jdqH4Azi8b+YlYDnU8FdQe
      QGVZoyqAyrJGHQKpLGvUHkBlWaMqgMqyZpYC5JJRdu/effjf/jkOvQbf1PGezbONA/sPzPos
      Szm6D+zDPTl/ePJJ5XFg/0nf03twL7t376anfxj5JAeeiWk3I5PzrwhTOXlmKUBorJt3Ds6/
      OOP3v/v9aS3QUnDwwMGZ35VCim/96zcJJTLsen0rz7+8fWnyOHhgYaF3sfU3WwGY9vTz4//6
      5Undm5j2MOo9s6eqn48c5wlu6VjBhReuAkAppHnk0f/iT/7kj3nysZ+zcUMH72x7h2Q6ydU3
      3sHOP/wWu04hZ2vi4tYSfvPaduRciguv/SibVhf3Znns8cepseuYytlYWZLEtPpWVlUbefyx
      x7nn3nv4+le/TE3zKnzeKR740l/T9+av6B2bRlCMfOrhTx0++iLNT773E7KCgL6kmk/ffTv/
      +vWvUlbTTMDn5c4HvkStPs4jP34Sq82BL5qdqU/v9le49PbPcNnKarhsM48++ihJXym/3unn
      7ls/wKvPP0XHlbdz4OX/xh1IkZd1fO5zn+GpJ346U7c7b7r6uAc3fGgPj/4wg286yue/9CUe
      /+EWHv7C55GSPh7/9U4+dfetx91TUlHNxo0X4B7sxpuYBKXAT7d8lzR6srKehz93Hz/70c/4
      zP2f4qf/8XWqN93NB9dX8LPn3uKDa8sAyCWm2fLok+j0Ouq7LuCWa1aw5d+fJi+kueaWO1nV
      ev5t1Hs6OU4BXv3ts0wcehNMpTx471189IZL+Od//r986qEv0FBh5dLNQ9xz7z0AvB72sfmj
      D9BWW0YmEaGqtIdApMC+nbtnFIBUmJrNH+X6tlp2v/z0cQVoXXkB99xzLz1vbWUikCSbSaMz
      WfnAB6483PgBjKxe087enhEOHDgAd99OdetK7r3nHqZ63uLQRICe4Xe4/wtfwmHQ8Phjj8/c
      GQqHqV1VNfNZo9NhcXaSCrwFXM5kPMc1pgRPumJce/Umxrq3sXc4SOqYus1F2+qN3HPPvQSH
      dvLGrj42r6hh9/A0mb43+MC1t8x5z1j/Pr6/5fvkZYXNV1xHYGgPZWuu49bLVzG080V29k6j
      1wgUlCy2+nXE3D0MYmLlRZdBtg+AbS//jtYNm3BatLz25jZuuWYF494Qf/9PX0GnnoNw0hw3
      Cb7mpjt48MEHefDeuwBIJ1NYzHqiiSORhkcHr+bS6pkG8uwvnuby62/lwQcfwKo5JiLbXMrq
      tsW/lW644x4+ccdN7H3lOfq8xWjL8e63cGVKeOCzn+WCVa1z3peXFPTa4+f0zc3NHOruOVx0
      iUyquFC9s8rKvgN7sNetAUUif/jE+aY1m+lwmmfVbT6yuSw6nZ4LrrqBfW/8jrFIjrbKucMS
      mro28OBDD/GFhz/HgR1v8e7mqgAb2sp49fevU71yE4IgcWAkxPrWo/sKSVJ+Zv5w7bXXAtC1
      arXa+E+RE/cAmPjkvbfyu12j/PmXvsijW75P6/0PUWaS+H/ffYQP3Tr7ZPXaylKe/vmT2KwG
      0gXrnJnVN7fzg5/8P7ZVlTEZnDt099WtzzAwESCdUqh0FKNmSqrqGNr6DD9yH2TAPTXnfVdd
      vpF/+8Y3qaosZypyNKC4fs3lvPmjR/juobfIpRJcccvHAdh01VV8/s//J9/4zndAL7Ci1sCO
      nbsQBahoWHibxKnRXrZseYRkTuDzD1+OoBFwmuLIFSc+7mmsfx9btmyhkM9S076B8vaNhF75
      Lo90/4GMpOPzD9+AJrOJb33xH/nOIx/C7DPxUn92VmDX5ms/xH/+4HEmbHZMpdVcsHb5nja5
      FKiOsAUpsP9dFrH2FWtxWGbv86koCs/87Edc//FPU2KQF3WPyplHVYAlYvdbL5O31rN5/QLn
      36qcVagKoLKsUT3BKssaVQHOYrLZ7MJCKu8JVQHOYpbTGQ1nClUBVJY1qgKoLGtUBVBZ1szy
      BMfj8TNVDpU5OF0bXSmKclqOUToX052lAOquAWcXheQwRmXpO2lZlhDFpT8heTHpytMalOxJ
      NmZtBq1pkWefngSyLKkbY53NpNyPoOA608VYUtJPWZHGdSd1j7HOh6n+9CzEUucAKsua4xRA
      kXIM9PcxODJGPhOn51A3wWiKeCSIyz0Jcp7+vj76h0YXmYVEKnVih048HieZSALF83SPvc9/
      +EC6SNBP5phN3yPBIJKcJ544mW1kT1y+E+XzbmaX78jtWeKH65dMHr9Zbi4eIJ6TiMeX58a1
      ZzvHK4Ai0NrRRTwaZHDQRdeqNXg9I4g6I/l0EgQtnV2dJKMhFjcqSzPhCQEw7hpmcGSMRDRI
      b18viUyBXC7D9rffxDPpwzXUT09PLzm5eN+OHd0owNCBbUzFcgwP9DE2MUUkGEISFXKZPEP9
      vfT0DiArMoN9vQyNuomFA/T29JBc8JTGufJJEQzE8ft9BPxeBgf66enpY3DEzbRvgoG+XqbD
      CaYm3PT2D6MgkcsV83GNjjLtHWdgoI9AOI7fO05v934SuaJTyzvuom9whFQkQE//AONeP36v
      h96BkcX9tVSWnOMUQNRq6N2/i/qmDhRRRCOAIIDFYikKCAJ+7zgCIoWFTiJ4FwVJwu3xkIjH
      kWXQakWCoTBVNfU01Dqxl1bQ5jQyGS56QBsrrLjHx9FZykGRkWTwjHkOp5YjFEwgC1qcRhgZ
      GsbR2IGczyIVCogaibHRiUWVa1Y+h9Od9vsJRhO0d3ah1YlQyCDqjHSuWMm0140kScS9biKZ
      NMHI0dMgw/EknZ0rCE57CcUStDXXAxKhYASpIBF0ewhGQjibO0glIsTjcURRRI1IPDMcpwDZ
      qI9YQU84HKTBWU53dzf2smomPS4CwQDT035CsRQanX7ebaiPZXLcxaTPj98fQBBFzBYLGiHP
      1FRxlwOdKOGeLE5yhGPWSZnK6hju6aGpvgIpFSKQyM99DqwA5hI7YwN9BCMxfH4/gqhBWPCs
      kOPzAS3BaTdTh8/kPTY3Qc7T39eL1mjF7/ej0QjH7e4wY60TBHKpo1txA/j8fjSCWCzVYUGL
      xUp82kf6JF8mKkvDeRMOLefSDIy6yeYV1q9ZcaaLsyRM7HgYk2oFOq1WoPPGDCrqTazoUhej
      qJwc500PcD4SntqH1aw6ws5ZR5gaWvHeyAk1ZISlP/hCQkIjLL0CLCrdqvm/njNdSTruUIyl
      QJJOswKooRXvndPxDAuFAlrt0v/pz8l0lzxVlSUj1vtX5JfhJLh008lvO7kY/nj6q8ddU0Mh
      VJY1Z1wBjg35PV3hv0uV7qmkI2VTLMohrXJGeB8UIMFgvxdyQbr7vfi94/iDEVKpFJHgNKMe
      Dx7XKNmCjHt0GJd7HJTi77FkBq93EkWWGB0eIpnJk0rGGR0dKzqgcnHe2bGHvsERkiE/ybxE
      wOfD6w8BCh7XCJFYknH3KKMu9wm8rQl++dzLAGx/+VlcwTSpVJZkMkEqlcI7PkY4HMLrDzE+
      cbSs0aAfj9cP+ST+UDGW6VD3QVKpFBNuF+mcRCYVo3f/DkLpPH5/iHDAx8TUNPlMCp/PSziW
      IhWP4PJMnv4/g8qcvC89wOS4i/7BUWQgn8+zf/9+PGPDBONZNFKO8uoa+nv7SKWyWJU4/pRM
      QZLZv/8AwVAQRS4gyTL7DxxgYGCAmnIdw+MR0BoxaUGj1ZKJRcgoaVzuMNGQD9dgP/aqOqYm
      xkmmUlRbFYb9c7/BnXYjgVgcrd7Kkdgl1+gonrERbGVVDA6PEg35kfNHy5ov5Bnt3k88nyES
      OxqU5x4dxFFZjWt0mKHhMeprnYBCNBIjn8/Tv/8A01MeUqIF3+QYg4ODGI3GOculcvp5XxSg
      tr6Zro4WRLIEQhlK7RbQGmlrrkfQ6tCLIIgiNrsDo14kMulCsVZhMhYnSz7XCNaqWow6DWar
      DaPRgCJJyIUCLZ0rSUWCM0EPDrsDjUZEkmW0okI2V8Bqs2My6pGkueMNyuuaOLTtbeqbGwEB
      Sc4TiydAa8BqNlHisKERxVllnZgK0OAsPRy4dxSN3ojVZEQUBRQgmz2qHF5/kNoyB3kE7A47
      okZDa0cXvpEBUmooxBnhfbACmahr0IFWpKXBSjzsQ2OqxXK4cTfV1zHm8bJyZRe5TBqDBpoq
      jUx5xujs7GRsdJjq1g5cY+N0dnYiCoBWR301iDotiSkXtU2tlJh1oDVgatABDkRBYWLcg6jV
      UlfXAAYNDbq5qlssX1X1ZqxGHXnRSCgVpbxqJRZTcS/P+rp6AESkmbLGgz7ysga7yY6puphS
      c0sLglB8pzTU1aEUMkTiaSpMWhz11aQTBgqKHofDhEYLprp65HyGsoYWToO/S2URnN2eYDmP
      LxDDWVW+sOy7KOTSuNwTNDa3zrlt+rnAco0Fej/NoGe3AixzAiO/wGJYesuYLMuI4ukIsVg4
      3fwhPUpsfq+usW524NtSlfcXqSuPS1dVgLOYeDyueoJPd7pLnuoxqLFA743T5Rc5nbE151q6
      aizQWUxy7BEUjf+E3wvJPJrRkz858v9v7+x1EoaiAPy1xVYuELGgCARBDYMRE5/Bxadw9FF4
      LAc3BxJj1MEQAxIJAuFHaEsLpToaBxESBAa+7Sz33O3ce8/Nd+Q5eXby3csf8TK9QPmr85nX
      Xf8FWnHG1gvuhEuw9GHD2/xmH8/KY/Niabnnxco9j/xW9qc5DoxsiwlSh5XCsawppQJr/pMF
      VACDm+sH/ELiKHuIogn8IoBrm0iSjBAapjHC7DWRRZhWo4q2sUkqk0GRPO4KBURwm7ECEaER
      0Pfw7B5dyyUWDqGIAP1uB6GpdOtVfMksg1qJoB4nHPL/vT0Mis997ME7+6kEvpCO1WnjKSqx
      yBav5RLhnTifjoHlyiRiUYpP9+ymD6hU6shjh5PTHMNWmduSic+zOcsdI4TANA280ZB23yad
      1Kk1LFTZYYgKnTZGQCUR/e6JrFk8X2tdzoWmoBjiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Surya kumar Records' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Team  Toss Decision and Won' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Team Wicket count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Team playoff_qualifier_final_eliminator' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Batsman Strike rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Toss Decision_Winner' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Toss decision and winner' width='192'>
      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
      T1PXsouM5qHY56XSozMZi1DX1El9UYKRwShWczWWZWGaJraMCFuGYRivWbYVqnpkTHPNvoOD
      AdD9RTRvq2BfeyUvdV9AVcC2bVJAjd/PYjJFWkvj9XpRVRVVXR18dN3RwhTidZJMJvF4PK9Z
      rhvWJvTm9uiatmbfwcEAlNY0YYX76AmNEty+C18qQk8ohL+shtqGIOHTffSi0tl1yKkmhVg3
      xwKgqB4OHD5605JKGlpffXT0+BucakoIx8hhUOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFq
      EgDhahIA4WoSAOFqEgDhajkDYNu2nK4sClruEWBlkn/40vNIBkShyn02qOJn4twPeOaLceqr
      K7j3/pNUFq99XrUQW1HuAHiLefSxx5lPpCnyegn48v+WmELcjtwBMFd49t+fxdPQRr0Vobz5
      YzSXy36zKBy5t2ZjiTil7AhWMLeYwLZy7AzYFpGpCcbGxogvp7Atg4nr46ykM4BNfH6W6egc
      sjsh8knuAASaOPUbd5NJpjjxKx+gucKb9aW2sczgyCSBQABdUznXe5qMotLTc5rkYoSBwTBz
      E1cYnZp3+jMI8Uu7xRRomR/+6CUyup8zPS+xo307tWW+NV9qZAwyySVGR8N07CkjYSrsawwy
      PxZmYuY6wR17aClK0DMcoaWuDNu2sSxrS1QVEKvWWlemaW5CT26PaWbfznIHIDXHZKqMj596
      GACPN/sI4A1Ucs9b7sFMzdHTP4zC6q3pLcCjaRimhWVZqKqKoigoioJt22iae3asr0fjXI8s
      bnY3smquLSNYU5r1+bXWlarm//pTNTXrdpY7ALZObHyAZ555BjxFvP/h36K+fO0RILkYZWBw
      FNtYoXrbHrTFNN2hHiw9QGNjKy++0sOEqrCr6yiKotx4381/F7r/7R/ja987t9ndyOr99+3j
      fffty/r8WutqK6w+hezbWe4AFNfwrgfvYz5pge7D58m+y+Avq+HokZqbllTTftOju++55xfv
      sRAbJPdOcHyMb714hf3797O/cw9FOQIgxFaUewTwlJFZGKO7uxt0Pw/UNOLz5P+cT4hf1C1+
      CS7j4x9/cvVvRaXUL2UMRWHJukVf7X+RFW813//O//zslUW89wOPUJflMKgQW1HWALS27eD5
      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
      iXz1f1SPdkkUXtmXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Toss win by Winner' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total runs by Batsman' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Total runs by id' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total runs by team1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total runs by team2' width='192'>
      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
      XMHFEqwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total runs in powerplay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAARtklEQVR4nO3da3QU533H8e/M7mql1f0OSEIIrWwJCQkESIh7E3xL8MHk4rox8aVJ6p4T
      2uZFmjbtOY3dOj3N7aRu4rRJTtM4Tk5Cck6cpElrHDuGYO53EEKgCxK6oDtI6LbanXn6Ahsb
      N5YGW6MVev6fV9o9s/M8++z89MzMzvzXUEophNCQYRiGGe1OCBFNEgChNQmA0Jo32h3QSW9r
      Hb/bfwrb9FCyvIaKolwMw3jLEmEO7T1G5frV+BjjwN6zVK1fiedaB1/+8V4+92cPTdlG36V6
      Xtl3AhsAL+vv/SC5qQGX3tHtT2aAGdRRf5hzXSEyUhP5zr99jd5rE/S0NbJ//wG6r47Q19HA
      D773A35/4CDNzef4/vd+yN79hxn1pXD/+2sgNMT55lbOHD/Cxcv9KKCzrZmTdfV091wFwOuP
      Iy0hhpf3HiAzMxO/12Sot52Dh44xNBZGWWHqTx/j4NFThCzFtb5OLra2cPDgUfoH+jh68AC9
      Q6HoDtQMkhlghvV0tHDW7mZhSSVJvjC/2rOHoZERfrbrCDseXM7Q8BDNjU0kGllcGx6kqeEi
      y4Lp/OdPf8tXH6/m7578LnfXlHD60sv882ce5LnvfJfk5Djs3E3seGgjKdn5bNro59VTzWze
      vInQtcv805e/Ts7C+fzP/jo+++Aq9hw8xlhfK2c6xliT0Mg3dzUTTBzlez82WZHv59enunny
      iQeiPVQzQmaAGbaoZBnr160j0t/BwFiEQCBA5rwc1FA/C0orKcoP8icff5iq1ZUszi9m+6N/
      TIrvzdeXr7uHJ/70MZL9Ebou1jG/8gEe3LIR0/jDZ7OH2s4yYGaQszCfgZZGxr1eEuOTyMvP
      oaezC/CyeetDfOxD97Jqw7088fADDA8Pz8xgzAISgBmmbBtML8P9PfT0NLL/eBtpiX7GwxYQ
      g4r0cOTQMYYn/DB+mUOHTzBq/eF1xSen0VV/gP2HThKx//AycZl5JHtt5i0o4P4t76du3y6u
      etLw2BO8w0u04nnyySefjHYndKGUTUtDPe2Xu1lz34dZuaQY33g3PeEElpUEKQwWkjcviROn
      6gmWrqIoJ45jpxopLi/H5/NTtCgH2xtPwYIMbAzKllVhj/fR0zeAlbiQVUsWvtmW6aVwUT6+
      QBq5KXDw6GlSc4tYs3olF88cI7NwKQV5eeQvSCeQkkVmchzeQAo5mclY3niKFs6L4kjNjKee
      euopI9rfBNu2jWnKRPRujA92s+uV3fR29VJ9/8MszUuNdpduK4ZhGFEPQCQSweuVY3Ex8+RS
      CKE9CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNLsJ5m1AoxM6dO4lE
      IiiluO+++4iJieHFF1+ksrKSkpKSt93GKG5nMgO8jd/v55FHHuHxxx/Hsiy8Xi/PP/8827Zt
      Y/fu3bS2tka7i2IaSQDeQV9fHz6fj/j4ePx+P7GxsaxevZr6+vpod01MI5d2gRRdrRdoaOvF
      tk1W1tRgjnRz+NR5lCeGVVVVxMd43Gl6mrz66qts3LiRQCBAeXk5zz33HKFQiIKCgmh3TUwj
      d2YApTjf2En12rVUBxM51tDNyZO1VK5Zz/LFGZxtaHOl2ekyODhIX18fBQUFGIZBSUkJjz76
      KMnJyZSWlka7e2IauTQDGORlJ7B3z++xQhOsWF/CqW6DRJ+JSk7h2qUubNvGtm0sy2K2lSe9
      fPkyd999N5FIBIALFy5QW1tLeXk52dnZhMPhKPdQTBdXAqCUor13iNVrNjDec56m5i5Mw8QG
      LCuCz+fFNM0bt0LOtjvCiouLb3pcU1NDTU1NlHoj3OTOlmcAdpjuri4m+q/gScikICOe42cb
      MYY6yS9c5kqzQtwq1+4JtibG6LzcjTcuiXmZqaBsers6UTFJZGUk88aZdKf3BIe7uuj/xrNu
      dHVW8hffSerHt0e7G3OaYRiGa/senpg48vIXvaU1D1kL8t71+tTEBBNNTe+9Y7cJMzkp2l3Q
      gnwPILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIA
      oTUJgNCaBEBoTQIgtCYBEFqTAAituVQWxebs8QMMjkPoaheBwrUsSR3nSF0LYLCieg0pAZ8b
      TQtxS1yZAQzDpGzFWtauqSEukEJpYTZn6ppYs2Ejq0sXUt80uyvDCX24WpFqbLALK2EeCV4I
      KYjzGKiEREaaOm+5MtwbVdp0oWwlFehmgIsBUDTUnSe4dB2GYeA1TSylsCZCxMT6b7kynJpl
      1ePcZpgGPp/sJrrNta0qPNxDH6mUJ17/EItyUnnt0HHM8UEKK1a71awQt8S9wlhxaayryrjx
      eF6wgqT518DjJxDnd6tZIW6JawEwPT5i3vLYMAziE6TamZhd5HsAoTUJgNCaBEBoTQIgtCYB
      EFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNb0us9QuE4phW3bwPV7
      QEzTxLZtlFKYpolhGFHu4c0kAGJaDQ8P8/TTT7NkyRIKCgoIBoPs3LkTn89Hbm4uW7dunVUh
      kACIaTUwMMCSJUu45557yMjIYNeuXWzdupWCggKeffZZxsfHiYuLi3Y3b3AvAMqmteEcA+Me
      SsvuxIdFU/1ZVHwWwfz5zJ7/AWI6paWlMX/+fPbv38/Q0BDr16/nF7/4BTk5OfT09BAKhTQI
      gFI0nD6CnVrAHdkmE2FoPr0PY8FS6D3HeSOG4oXprjQtosvv93PXXXcB8Mwzz7B48WJ27NiB
      ZVkMDAwQCASi3MObuVMaEUV7zxVSIwZ1VxJZVpbO5WGLTTlp2ElB9tZ3c2de2vVllXJUGAsH
      i8w1jsZllmlqamLPnj0opSgsLGRwcJAXXniB0dFRVq1ahc/nm1Xvy7UZYGQ8RFXZcsJ95zlw
      ogWFwoAbZwWAG1XhnFR9syzLla7OVk7HZbYJBoMEg8Gbntu+ffuNv2fbe3IlAIZhkpWcyFjY
      JiEQQFkRUmJMeoYnoLebtLTU69XivF4ikYjDynAeN7o6axmGVIabCe7MAIZBReVyTtceI2LG
      sqpyGd6JTE6ePoLyJ7GsfL4rzYp3Nl5fT6SjI9rdmDGxFcvwZkx9nOnaWSB/QiqrVq958wlf
      ClU1a91qTkxh9LV9DL/8SrS7MWMy//ZzjgIgl0IIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0
      JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmuu3RN8pbuV
      uoZ2MKC4ooqUmAh1tWdQgQxK7yjAY0ptOBF9LgVA0d7ewZLKalID15s4vX8vyXdWQ3cd51ri
      KVuc7U7TQtwCRwFoPLGP8dRC2g+/SKeVxscevJ9Yz+T/wUMj1zh9/BCJSWmUlRbTH4Kl6fEo
      fz576npRBVk3qsI5KXr1RjEtbTgcF+ermz3V2GaCbTsbP0fHAK+89BuGehv5zfF+rjTsob5z
      ZIpXGKzccA8b1q4hP3Gco+cuc3M13OsfhuOyiELcMmfblaMZoKggl+e/+33WffTPufTKj0hK
      8E/etFK0tbYwL3ch4YkJYvwxJPpN2gdGoaedzMwcDMPA4/GglMLjmbrqm2Vqdrz++vhM3+r0
      OuYyTdPR+DkKwMYPfZKlmwZJSklmpLKQ5JSpX5YY5+XE0cPEpWSzrDAdI7+K2jNnUHHplOVn
      OWlWCNc5CsDhF3/Cz/fWE4j1QUyARz+1g8VZ8e+4vGEYpGbnUZ2d9+aTMQEqVlS/5w4LMZ0c
      BaCpuZUPfeIzVAczAP2mUzF3OQpAVlqAn//o+5wvyAKPn7u3bGNBaqzLXRPCfY4CULFpGznL
      x64/MD0kxclPi4m5wdGWXHtkD/vOtIGKUN/UxT9+9esEYyUE4vbnaCt+3wOP8b4HAGz+41/+
      AQu9fqxCzF2OAvD7X/+Ig3UdgE1Xv80HfZqdkxdzloPfJlIsX/8BKjZ48ZgG42PX8Hnl21sx
      N0zxr1xx/OWdfPFLX+Pr397J6FA7z/zrv3M1pNl1OWLOmjwAVoRf/vYIO/7m7yky6/n8l37M
      Y3/11+RnzJ4fOhbivZhyBghFRji27zXa+0YoKi3j0rlTXBmemJneCeGyyY8BTC/bH/443VfH
      WXXXRwEtf69azGGTB8AwKVuxlrIZ6owQM23SACjbYmw89P+e98fGyS2NYk6YNADWaD+/2334
      5ic9Maxet5GMxMnvCRDidjBpALwJWWzZsgXbCtPf10fYUmCYJMplEGKOcLQl7/vlf/Hfr9US
      jkuj73IfT3/lK+Sny6lQcftzFICzDS189KGP0GktpHP3t7gWknNBYm5wdFHPurXrUUm59O57
      jvNXYslIjHG7X0LMCEcBaLjURlpqNp/87BfYvCKPa2Nht/slxIyYfBfItnjxhR/yq9+8xPGW
      a2Qn+qitq2fJ5kccrXyg/QI/e/UUn9r+Ea60nedYYxeGFWFZ9Toyk+SOMhF9U34RVlG1gZa2
      ToqqN5OXHse2B7ezIH3qU6AqMsq51isszkkDoK6pg42b3oc9cIkTF9vJrAhOyxsQ4r2YIgAG
      8/MK+MQTn2b3S//L72pHqdqwmZzstMnXqhSNZ2tZVLKUC6cOABBWCr9pQCCe0dFObNvGtm0s
      y3JUHCsSiTh+U3OBshXh8PTtaupWWS8SsRyNn6OzQC/95Nu0xJWzZVMp33r2q6R+4SsUpL7z
      gbBSY9SeayZzOExz80XSc9qI8XiYsBX22CiBQBymaWK+XuzK63VwW4KDZeYSwzTw+XzTtj5T
      s8JiXq/H0fg52qoGrg4RrLiTvIJ5pAUUI2MRmCQAhhlg20MPARAJj1NWlMeAf4Tdr+7BsK8f
      AwgxGzgKwNaPPcY3n/0Ou39qc2fNh1myIOC4gU2b3g9ARn4Jd+eXvLteCuGSyQNghXnmm9/g
      0U/+BZ9/6osoBaZcBCfmkClmAMXllvO8/PJLb17/44lh5eq1pCfIl2Hi9udgF0gRiUQIh18/
      U6MMKWku5owpAmCQFyzj3vs+QEpg+s5ICDFbTB4Aj49Pf/ovZ6grQsw8vU4OC/E2EgChNQmA
      0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFpzp9SCUgx0t9HQ
      0kFMYgZLS4IYVoi62tOouExK71gkvy8gZgXXZgDL9FO5qpo8Xz9HGvuoO7qfxIWlJNt9nGvt
      catZIW6JOzOAYZCWmkJXZystncMUViZzrgPK0uNR/nz21PWiFmWhlEIphWVZU65St8JOOBwX
      56vT6zZW23Y2fu4dAyibcNgiLs7P8MgY3LTHc/3DeCMAQkw/Z9uVKzOAUor+K4PkLSokI8nm
      eFMvGX6T9iujGD3tZGbmYBgGHo8HpRQej2fKdVqaVTbj9fGZvtXpdcxlmqaj8XOt3uDEyFWO
      NDcTE59K9YogHmsBZ2vPoGLTKSvKcqtZIW6JKwEwDIPcxcXkLn5rSwEqVlS70ZwQ75pm+xVC
      3EwCILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIA
      oTUJgNCaBEBoTQIgtCYBEFpzrTLcYF8nF5ovETH8lC+rwBcZ5vSZsyh/MhVlJcR4JXsi+lzb
      CkcnbJZWVlGxMJajZzuoPX6U3JIV5CZEqLvY5VazQtwS1yrDzc/JIxIa5lBtG4UrNnLhZCOV
      SX6UZwHnartRaj62bWPbNpFIZMpVTmeVtNuBUsrRuDhl23oVILMsZ9uVa3WBRgY62X/8HOUr
      1pGV4qfBuF6ry7ZtzNcL45qm+frjqSciJ8vMJQbGtL5n/QpjORs/lyrD2Zw8eZaqdX9Ekv96
      da55AQ9N3UMYPReZlx288YEYhrOO6vYBYkxv6LUbPofblUszgEFmZiq1xw4BkBcso3jlWs7X
      nkIl5FG8MMOdZoW4Ra5Vhrtj6UrueNvzxeUr3GhOiHdNrx1rId5GAiC0JgEQWpMACK1JAITW
      /g/LfM2RwE0QugAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total_runs_by_batsman' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend for year total runs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Winner by Venue' width='192'>
      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
      rmtjZTJYtut30dMNohENdeTnbmdNTMv2O1Qo/vdL13V/6avgHzkxTWzCAIutfgAAAyZJREFU
      GMbnXaodshkTy1HRIgb6DbawTdPk9y+9e0cOw32NJZH9nG7ZxYneMlY++DDLS7+eVyFyj2ma
      WLaHd4tH+GbjztcDuC4uHlb3JS5+YuJWJiiXk11igqgR/oYOyettY9/unew8nmZhUzOPrF1C
      2Vw5OCLuGMuysKzbfxb7zi+BPBfHdXFH1sCqqoxpWS7EF10hQqHbv5165z8BFJVQ6IuJJkJM
      5UY9Ur9qsvgQgSYBEIEmARCBJq0RRaDJJ4AINAmACDQJgAg0CYAINAmACDQJgAg0CYAINGmP
      LuYEzzEZGhgglbawPX8AX1FRIZHR+u3ZkQCI3Gen6Ll0koOHPuBCZz8ZV0UrrGb1/RtoWjGf
      uH6TyrhpSABEjnNJdx5h587jKA3N/PjJpSSiFlfee5Wtu3fhxZ5i46JyojfqDjgDcg8gcpub
      5EzrCdK1TWxqWkxFgYYazqfu/id4fGWK40cv05/KzrrFjARA5LbMZS52xqitm09RgTGmSthg
      UWMDbscVukwTe5YJkACI3NbfT68Wp7AwgjFhwa4mKqlK9tA7bE/b+GwqEgCR2zJphhUFRVUn
      v1nzouQpSVJDDs4sm2dLAESgSQBEbguF/K1Kz5t8o2vb2GiEtRu1fJ8ZCYDIbYVFlDgmlmkz
      cUaI19dLT6iE4niYiU0EZ0oCIHJbvIrqvAG6unpJZpwxnwIOfRcuMlhZSbmhM8s/A0gARI5T
      y1nUGGfg4zbaP+4mZTl4bpbBzjYOneynbsVCyvOMWQxq90lNsMh96Q5a97zDmXSMykQJMd2h
      r+McncpSNj9yDwuKotx0/slNSADEnOAOX+X0h0dp77hOygmRV17P2ntXUlMUnfX6HyQAIuDk
      HkAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRA
      BJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASa
      BEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABNr/AcwpasZ2BM/L
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='158' name='Winner result margin' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='135' name='Winner_by id' width='192'>
      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
      7SxAx5bLca3d+ZQeHYUst5cxuwvvs8Njv4OnLgOpl6uhoOl4VtZaH0cPpkAOmPjXKIy8eAzJ
      uzfh86KmWwbs+g3FKL/XEKkZgf5tlneC5m8R6Je0DZveTGy9FSJkOfza/HGg4+0BAJBj9sOu
      26ymP38rRiOUigyzX6HaGwttXNMtFA1GI3B+B0KCd1he1G0Wwlf7wQU++POqe5D55WEkbN6N
      8oqm34ubb1GYv2ohRjn35hVwDmLN9q15OwGrXrRwK4QKHv7LsfT+Xdi76U3E3DQCpts5pkwP
      xZxRvTisLlHBdeoyRA7Nwp7kTXgzxnQriqM7ho/XYLbpa9Jh8l8QUrMDn65eijLT+/7kc1qE
      PZ2HtR2uAapQkBKDY6aL1KbzKQirNSNg+YaZdpw00GrL8GHMCmTUKVCpnfH0q+9i9nDL4+Dt
      0PQz0vSHMN84a/d99T7eDUpSYwAkNZtTIP6XSPol4zUASY1TIJIaAyCpMQCSGgMgqTEAkhoD
      IKkxAJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCS
      GgMgqTEAkhoDIKkxAJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCSGgMgqTEAkhoDIKkx
      AJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCSGgMg
      qTEAkhoDIKkxAJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCSGgMgqTEAkhoDIKn9HyL5
      IcSb+NB8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='count Extra type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='highest bowlers runs based on IPL winners' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='is_Final' width='192'>
      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
      yKku27EeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='way of dismissed kind' width='192'>
      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
      CwWcjVZOj0BlAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
